Likeness: 0.787878787879
sample_exams/cmps112-2009q1-final.tt
 5. Prolog:  Write drop/3 such that it returns all elements of the
    second argument, starting with the one that matches the first
    argument, or none, if none match.  The third argument is the result.
    [2pt]
    | ?- drop(3,[5,4,3,2,1],X).
    X = [3,2,1]
    | ?- drop(9,[1,2,3],X).
    X = []
    | ?- drop(1,[1,2,3,4],X).
    X = [1,2,3,4]

Words from problem not in sneak peek:
none, third, matches, drop, result, such, starting

Words from problem yes in sneak peek:
all, is, argument, one, second, if, 1, returns, write, 3, 2, 5, 4, 9, match,
elements, 2pt, that, it, with, of, x, the, first, or, prolog


Likeness: 0.764705882353
sample_exams/cmps112-2009q1-final.tt
 6. Ocaml:  Define the function merge which takes a predicate as an
    argument and a pair of sorted lists.  The result is a single list in
    sorted order.  [3pt]
    # merge;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a list -> 'a list
    # merge (<) [1;3;5] [2;4;8;9];;
    - : int list = [1; 2; 4; 4; 8; 9; 9]

Words from problem not in sneak peek:
takes, 3pt, lists, merge, single, result, pair, sorted

Words from problem yes in sneak peek:
and, int, is, argument, an, as, in, 1, 3, 2, bool, 4, which, 6, 9, 5, define,
function, predicate, 8, a, of, list, ocaml, the, order


Likeness: 0.785714285714
sample_exams/cmps112-2009q1-final.tt
 7. Ocaml:  Define the function sum in terms of List.fold_left in a
    curried manner to sum a list of integers.  Do not write a recursive
    function.  [1pt]
    # sum;;
    - : int list -> int
    # sum [1;2;3;4;5];;
    - : int = 15

Words from problem not in sneak peek:
integers, terms, recursive, fold_left, manner, curried

Words from problem yes in sneak peek:
int, in, 1, sum, write, to, 3, 2, 5, 4, 7, define, function, do, not, 1pt, a,
15, of, list, ocaml, the


Likeness: 0.744186046512
sample_exams/cmps112-2009q1-final.tt
11. Ocaml:  Write a function iota which has an integer argument $n$ and
    returns a list of numbers from $1$ to $n$ inclusive.  The empty list
    is returned for non-positive numbers.  Use a local helper function
    to make your solution tail-recursive.  [2pt]
    # iota;;
    - : int -> int list = <fun>
    # iota 5;;
    - : int list = [1; 2; 3; 4; 5]
    # iota (-5);;
    - : int list = []

Words from problem not in sneak peek:
non, recursive, inclusive, positive, make, numbers, integer, local, iota, empty,
returned

Words from problem yes in sneak peek:
and, helper, int, is, argument, an, your, 1, use, ocaml, from, for, returns,
write, to, tail, 2, 5, 4, which, has, function, 11, 2pt, 3, a, of, list,
solution, n, fun, the


Likeness: 0.705882352941
sample_exams/cmps112-2009q1-final.tt
 2. Partial parameterization of a currried function keeps arguments in
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
currried, daemon, parameterization, partial, keeps

Words from problem yes in sneak peek:
a, function, c, b, d, monad, of, thunk, 2, arguments, in, closure


Likeness: 0.703703703704
sample_exams/cmps112-2009q1-final.tt
 4. In Java, a static variable is allocated:
    (A) at translation time.
    (B) when the class files are put in a jar.
    (C) when the class is loaded.
    (D) when an object is created with new.

Words from problem not in sneak peek:
files, created, jar, time, put, loaded, allocated, translation

Words from problem yes in sneak peek:
a, c, b, java, d, is, object, when, at, an, static, are, in, variable, new, the,
with, class, 4


Likeness: 0.736842105263
sample_exams/cmps112-2009q1-final.tt
 5. From what segment does a call to new in C++ allocate memory?
    (A) data
    (B) heap
    (C) stack
    (D) text

Words from problem not in sneak peek:
text, segment, call, allocate, memory

Words from problem yes in sneak peek:
a, what, b, from, d, c, to, does, 5, heap, in, new, data, stack


Likeness: 0.76
sample_exams/cmps112-2009q1-final.tt
 9. Of the ones listed here, the attribute most associated with
    functional programming is:
    (A) dynamic dispatch
    (B) referential transparency
    (C) static type checking
    (D) unification

Words from problem not in sneak peek:
associated, attribute, referential, unification, listed, transparency

Words from problem yes in sneak peek:
a, c, b, d, checking, with, is, dynamic, functional, dispatch, programming,
most, ones, static, here, of, 9, the, type


Likeness: 0.714285714286
sample_exams/cmps112-2009q1-final.tt
 4. An object-oriented language such as C++ does dynamic dispatching of
    method calls by means of a:
    (A) virtual function table
    (B) template declaration
    (C) heap-allocated closure
    (D) friend function

Words from problem not in sneak peek:
calls, means, dispatching, template, such, allocated, method, friend

Words from problem yes in sneak peek:
function, closure, c, b, d, language, of, a, object, dynamic, virtual, an,
oriented, as, does, 4, heap, declaration, table, by


Likeness: 0.710526315789
sample_exams/cmps112-2009q1-final.tt
 6. If guess is a predicate that searches a database to return one of
    its elements, and verify checks to see if the thing found is good,
    then we may define the predicate find, which returns a valid entry
    from the database as:
    (A) find(X) :- guess(X), verify(X).
    (B) find(X) :- guess(X).
        find(X) :- verify(X).
    (C) find(X) :- verify(X), guess(X).
    (D) guess(X) :- find(X), verify(X).

Words from problem not in sneak peek:
searches, guess, database, may, verify, checks, thing, valid, found, entry, find

Words from problem yes in sneak peek:
and, is, predicate, one, see, elements, its, if, from, to, returns, which, 6,
define, then, we, good, return, that, a, c, b, d, of, as, x, the


