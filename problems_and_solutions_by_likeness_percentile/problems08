Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.826086956522
sample_exams/cmps112-2014q4-final.tt
2. Ocaml.  Define the functions reverse and sum using fold_left.
   (Fill in the blanks.)  [3pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a

   # let reverse = List.fold_left
   ________________________________________;;
   val reverse : '_a list -> '_a list

   # let sum = List.fold_left
   ________________________________________;;
   val sum : int list -> int

   # let length = List.fold_left
   ________________________________________;;
   val length : '_a list -> int

Words from problem not in sneak peek:
________________________________________, fold_left, 3pt, _a

Words from problem yes in sneak peek:
and, a, functions, blanks, reverse, val, int, sum, list, ocaml, length, 2, let,
in, using, the, define, b, fill


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
8. Prolog.  Given the graph shown here, write edge facts to describe
   it.  Write a rule adjacent which uses edge to determine if two
   nodes are adjacent.  [2pt]

   .PS 0.75i
   A: circle "a"
   B: circle "b" at A+(-4*circlerad,-4*circlerad)
   C: circle "c" at A+(0,-4*circlerad)
   D: circle "d" at A+(4*circlerad,-4*circlerad)
   line from A to B chop
   line from A to C chop
   line from A to D chop
   line from B to C chop
   line from C to D chop
   .PE

Words from problem not in sneak peek:
shown, describe, rule, uses, determine, 75i

Words from problem yes in sneak peek:
it, are, facts, if, ps, given, from, 0, graph, two, write, to, circlerad, 4,
which, pe, 8, nodes, 2pt, here, line, circle, a, c, b, d, adjacent, chop, edge,
the, prolog, at


Likeness: 0.840909090909
sample_exams/cmps112-2014q4-final.tt
12. Define a function range with two integer arguments and which
   returns a list of all arguments in order including the two
   arguments.  If the first number is larger than the second, return
   an empty list.  [3pt]

    (a) Ocaml.
        # range 2 7;;
        - : int list = [2; 3; 4; 5; 6; 7]
        # range 7 2;;
        - : int list = []

    (b) Scheme.
        > (range 2 7)
        (2 3 4 5 6 7)
        > (range 7 2)
        ()

    (c) Perl.
        print "[@{[range(2,7)]}]\n";
        [2 3 4 5 6 7]
        print "[@{[range(7,2)]}]\n";
        []

Words from problem not in sneak peek:
larger, 3pt, range, including, print, integer, empty

Words from problem yes in sneak peek:
and, all, int, is, number, an, second, in, if, 4, perl, returns, 2, 5,
arguments, which, 6, scheme, define, function, return, 7, 3, 12, two, with,
than, a, c, b, of, list, ocaml, n, the, order, first


Likeness: 0.84
sample_exams/cmps112-2014q4-final.tt
13. Write a function that takes two lists as arguments and which
   returns a single list where each element is a list of corresponding
   pairs.  If the lists are of different lengths, trailing elements of
   the longer list are ignored.

    (a) Scheme.  [2pt]
        > (pairthem '(1 2 3 4) '(a b c d e))
        ((1 a) (2 b) (3 c) (4 d))
        > (pairthem '(1 2 3 4 5) '(a b))
        ((1 a) (2 b))

    (b) Ocaml.  [2pt]
        # pairthem [1;2;3] ['a';'b';'c';'d'];;
        - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
        # pairthem [1;2;3;4;5] ['a';'b'];;
        - : (int * char) list = [(1, 'a'); (2, 'b')]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
ignored, different, corresponding, takes, lengths, pairs, lists, char, pairthem,
trailing, single, longer

Words from problem yes in sneak peek:
and, correct, 2pt, int, 12pt, is, number, negative, indicates, as, are, want,
total, your, if, 1, to, that, question, two, write, 0, returns, 2, 5, arguments,
which, answer, you, scheme, worth, 4, function, elements, multiple, risk,
missing, max, 13, answers, 3, wrong, b, letter, e, choice, a, c, 12, don, d,
column, of, list, ocaml, element, points, t, each, the, z, where, left


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
 1. What is not to be avoided in a pure functional language?
    (A) goto
    (B) lambda
    (C) loops
    (D) variables

Words from problem not in sneak peek:
loops, avoided, goto

Words from problem yes in sneak peek:
a, be, what, b, d, language, is, c, functional, 1, to, pure, in, not, variables,
lambda


Likeness: 0.863636363636
sample_exams/cmps112-2014q4-final.tt
 3. What is the expected running time of fold left and fold right on a
    list of length $n$?
    (A) fold left $ O ( 1 ) $;  fold right $ O ( 1 ) $
    (B) fold left $ O ( 1 ) $;  fold right $ O ( n ) $
    (C) fold left $ O ( n ) $;  fold right $ O ( 1 ) $
    (D) fold left $ O ( n ) $;  fold right $ O ( n ) $

Words from problem not in sneak peek:
expected, running, time

Words from problem yes in sneak peek:
and, a, what, right, d, on, of, is, list, c, o, n, 1, fold, 3, b, length, the,
left


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 1. Which language is not completely strongly typed?
    (A) C++
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
strongly, typed, completely

Words from problem yes in sneak peek:
a, c, b, d, language, is, perl, 1, which, not, scheme, smalltalk


Likeness: 0.833333333333
sample_exams/cmps112-2014q4-final.tt
 7. Which is a fully curried lazy functional language with
    overloading?
    (A) Haskell
    (B) Ocaml
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
fully, lazy, curried

Words from problem yes in sneak peek:
a, c, b, which, language, is, functional, ocaml, overloading, haskell, 7,
scheme, with, smalltalk, d


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 9. In Perl, what will print the current date and time?
    (A) print "date";
    (B) print 'date';
    (C) print (date);
    (D) print `date`;

Words from problem not in sneak peek:
date, print, time

Words from problem yes in sneak peek:
and, will, what, b, d, c, perl, current, a, in, 9, the


Likeness: 0.888888888889
sample_exams/cmps112-2014q4-final.tt
12. ``Go To Statement Considered Harmful''
    (A) Edsger Dijkstra
    (B) C.A.R. Hoare
    (C) Donald Knuth
    (D) Niklaus Wirth


Words from problem not in sneak peek:
hoare, r

Words from problem yes in sneak peek:
a, c, 12, statement, considered, niklaus, dijkstra, wirth, harmful, to, donald,
b, edsger, go, knuth, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-midterm.tt
3. Scheme.  Define the tail-recursive function foldl so that it may be
   used in the following example.  [2pt]
   > (define (sum list) (foldl + 0 list))
   > (sum '(1 2 3))
   6

Words from problem not in sneak peek:
may, recursive, foldl, example

Words from problem yes in sneak peek:
function, be, tail, 2pt, that, sum, 6, list, it, used, 1, 0, 3, 2, so, in,
following, the, scheme, define


Likeness: 0.847826086957
sample_exams/cmps112-2016q4-midterm.tt
7. Ocaml.  Define the function zipwith that takes a function and two
   lists and returns a new list with the elements combined.  Use
   failwith if the lists are not of the same length.  [2pt]
   val zipwith : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
   # zipwith (+) [1;2;3;4] [5;6;7;8];;
   - : int list = [6; 8; 10; 12]
   # zipwith (+) [1;2;3;4] [5;6;7;8;9];;
   Exception: Failure "zipwith".
   # zipwith (fun a b -> a,b) [1;2;3] ['a';'b';'c'];;
   - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
   # zipwith max [1;2;3;4] [4;3;2;1];;
   - : int list = [4; 3; 3; 4]

Words from problem not in sneak peek:
exception, takes, zipwith, lists, char, failure, combined

Words from problem yes in sneak peek:
and, int, are, if, use, val, two, same, 1, returns, 2, 5, 4, 7, 6, 9, new,
define, function, elements, 2pt, that, max, 3, b, 8, not, with, a, 10, c, 12,
of, list, ocaml, length, fun, the, failwith


Likeness: 0.8
sample_exams/cmps112-2016q4-midterm.tt
 2. Static type inference is a major feature of:
    (A) C
    (B) Java
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
major, inference, feature

Words from problem yes in sneak peek:
a, c, b, java, d, of, is, ocaml, 2, static, scheme, type


Likeness: 0.879310344828
sample_exams/cmps112-2016q4-midterm.tt
 6. In Smalltalk, the expression 3+4.  means:
    (A) The message + is sent to the number 3, the result of which is
        a function that accepts the message 4.
    (B) The message +4 is sent to the number 3.
    (C) The message 3+ is sent to the number 4.
    (D) The messages 3 and 4 are sent to the operator +.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
means, messages, accepts, result, operator, expression, sent

Words from problem yes in sneak peek:
and, 12pt, is, number, indicates, are, want, in, message, total, your,
smalltalk, if, 1, 0, missing, question, negative, write, to, 3, 4, which, 6,
answer, you, worth, function, multiple, risk, that, max, answers, choice, wrong,
b, letter, a, c, 12, don, d, column, of, correct, points, t, each, the, z, left


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-midterm.tt
 8. What is the signature of the Ocaml function List.hd (equivalent to
    car)?
    (A) 'a -> 'a list
    (B) 'a -> 'a
    (C) 'a list -> 'a list
    (D) 'a list -> 'a

Words from problem not in sneak peek:
equivalent, signature

Words from problem yes in sneak peek:
function, a, what, b, d, of, is, list, c, ocaml, to, car, 8, the, hd


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.826086956522
sample_exams/cmps112-2014q4-final.tt
2. Ocaml.  Define the functions reverse and sum using fold_left.
   (Fill in the blanks.)  [3pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a

   # let reverse = List.fold_left
   ________________________________________;;
   val reverse : '_a list -> '_a list

   # let sum = List.fold_left
   ________________________________________;;
   val sum : int list -> int

   # let length = List.fold_left
   ________________________________________;;
   val length : '_a list -> int

Words from problem not in sneak peek:
________________________________________, fold_left, 3pt, _a

Words from problem yes in sneak peek:
and, a, functions, blanks, reverse, val, int, sum, list, ocaml, length, 2, let,
in, using, the, define, b, fill


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
8. Prolog.  Given the graph shown here, write edge facts to describe
   it.  Write a rule adjacent which uses edge to determine if two
   nodes are adjacent.  [2pt]

   .PS 0.75i
   A: circle "a"
   B: circle "b" at A+(-4*circlerad,-4*circlerad)
   C: circle "c" at A+(0,-4*circlerad)
   D: circle "d" at A+(4*circlerad,-4*circlerad)
   line from A to B chop
   line from A to C chop
   line from A to D chop
   line from B to C chop
   line from C to D chop
   .PE

Words from problem not in sneak peek:
shown, describe, rule, uses, determine, 75i

Words from problem yes in sneak peek:
it, are, facts, if, ps, given, from, 0, graph, two, write, to, circlerad, 4,
which, pe, 8, nodes, 2pt, here, line, circle, a, c, b, d, adjacent, chop, edge,
the, prolog, at


Likeness: 0.840909090909
sample_exams/cmps112-2014q4-final.tt
12. Define a function range with two integer arguments and which
   returns a list of all arguments in order including the two
   arguments.  If the first number is larger than the second, return
   an empty list.  [3pt]

    (a) Ocaml.
        # range 2 7;;
        - : int list = [2; 3; 4; 5; 6; 7]
        # range 7 2;;
        - : int list = []

    (b) Scheme.
        > (range 2 7)
        (2 3 4 5 6 7)
        > (range 7 2)
        ()

    (c) Perl.
        print "[@{[range(2,7)]}]\n";
        [2 3 4 5 6 7]
        print "[@{[range(7,2)]}]\n";
        []

Words from problem not in sneak peek:
larger, 3pt, range, including, print, integer, empty

Words from problem yes in sneak peek:
and, all, int, is, number, an, second, in, if, 4, perl, returns, 2, 5,
arguments, which, 6, scheme, define, function, return, 7, 3, 12, two, with,
than, a, c, b, of, list, ocaml, n, the, order, first


Likeness: 0.84
sample_exams/cmps112-2014q4-final.tt
13. Write a function that takes two lists as arguments and which
   returns a single list where each element is a list of corresponding
   pairs.  If the lists are of different lengths, trailing elements of
   the longer list are ignored.

    (a) Scheme.  [2pt]
        > (pairthem '(1 2 3 4) '(a b c d e))
        ((1 a) (2 b) (3 c) (4 d))
        > (pairthem '(1 2 3 4 5) '(a b))
        ((1 a) (2 b))

    (b) Ocaml.  [2pt]
        # pairthem [1;2;3] ['a';'b';'c';'d'];;
        - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
        # pairthem [1;2;3;4;5] ['a';'b'];;
        - : (int * char) list = [(1, 'a'); (2, 'b')]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
ignored, different, corresponding, takes, lengths, pairs, lists, char, pairthem,
trailing, single, longer

Words from problem yes in sneak peek:
and, correct, 2pt, int, 12pt, is, number, negative, indicates, as, are, want,
total, your, if, 1, to, that, question, two, write, 0, returns, 2, 5, arguments,
which, answer, you, scheme, worth, 4, function, elements, multiple, risk,
missing, max, 13, answers, 3, wrong, b, letter, e, choice, a, c, 12, don, d,
column, of, list, ocaml, element, points, t, each, the, z, where, left


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
 1. What is not to be avoided in a pure functional language?
    (A) goto
    (B) lambda
    (C) loops
    (D) variables

Words from problem not in sneak peek:
loops, avoided, goto

Words from problem yes in sneak peek:
a, be, what, b, d, language, is, c, functional, 1, to, pure, in, not, variables,
lambda


Likeness: 0.863636363636
sample_exams/cmps112-2014q4-final.tt
 3. What is the expected running time of fold left and fold right on a
    list of length $n$?
    (A) fold left $ O ( 1 ) $;  fold right $ O ( 1 ) $
    (B) fold left $ O ( 1 ) $;  fold right $ O ( n ) $
    (C) fold left $ O ( n ) $;  fold right $ O ( 1 ) $
    (D) fold left $ O ( n ) $;  fold right $ O ( n ) $

Words from problem not in sneak peek:
expected, running, time

Words from problem yes in sneak peek:
and, a, what, right, d, on, of, is, list, c, o, n, 1, fold, 3, b, length, the,
left


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 1. Which language is not completely strongly typed?
    (A) C++
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
strongly, typed, completely

Words from problem yes in sneak peek:
a, c, b, d, language, is, perl, 1, which, not, scheme, smalltalk


Likeness: 0.833333333333
sample_exams/cmps112-2014q4-final.tt
 7. Which is a fully curried lazy functional language with
    overloading?
    (A) Haskell
    (B) Ocaml
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
fully, lazy, curried

Words from problem yes in sneak peek:
a, c, b, which, language, is, functional, ocaml, overloading, haskell, 7,
scheme, with, smalltalk, d


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 9. In Perl, what will print the current date and time?
    (A) print "date";
    (B) print 'date';
    (C) print (date);
    (D) print `date`;

Words from problem not in sneak peek:
date, print, time

Words from problem yes in sneak peek:
and, will, what, b, d, c, perl, current, a, in, 9, the


Likeness: 0.888888888889
sample_exams/cmps112-2014q4-final.tt
12. ``Go To Statement Considered Harmful''
    (A) Edsger Dijkstra
    (B) C.A.R. Hoare
    (C) Donald Knuth
    (D) Niklaus Wirth


Words from problem not in sneak peek:
hoare, r

Words from problem yes in sneak peek:
a, c, 12, statement, considered, niklaus, dijkstra, wirth, harmful, to, donald,
b, edsger, go, knuth, d


Likeness: 0.823008849558
sample_exams/cmps112-2014q4-test1.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Basic,
   C++, C, COBOL, FORTRAN, Haskell, Intercal, Java, Lisp, ML, OCaml,
   Pascal, Perl, PL/I, Prolog, Simula 67.  (Grading:  deduct 1/2 point
   for each wrong or missing answer, but do not score less than 0.)
   [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, scientific, business,
missing, processing, here, described, by, c, language, of, programming, ocaml,
simulation, s, contribution, or, first, among, point, 60, haskell, 67, from, to,
structured, perl, 2, way, basic, was, pl, that, but, simula, grace, ibm, bjarne,
ml, following, algol, prolog, and, is, cobol, at, in, fill, influenced, write,
answer, used, wirth, most, wrong, awk, designed, included, intercal, data, a,
java, i, fortran, the


Likeness: 0.869565217391
sample_exams/cmps112-2014q4-test1.tt
 9. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4

Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 4, 7, in, 9, the, define, might,
smalltalk, if


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-midterm.tt
3. Scheme.  Define the tail-recursive function foldl so that it may be
   used in the following example.  [2pt]
   > (define (sum list) (foldl + 0 list))
   > (sum '(1 2 3))
   6

Words from problem not in sneak peek:
may, recursive, foldl, example

Words from problem yes in sneak peek:
function, be, tail, 2pt, that, sum, 6, list, it, used, 1, 0, 3, 2, so, in,
following, the, scheme, define


Likeness: 0.847826086957
sample_exams/cmps112-2016q4-midterm.tt
7. Ocaml.  Define the function zipwith that takes a function and two
   lists and returns a new list with the elements combined.  Use
   failwith if the lists are not of the same length.  [2pt]
   val zipwith : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
   # zipwith (+) [1;2;3;4] [5;6;7;8];;
   - : int list = [6; 8; 10; 12]
   # zipwith (+) [1;2;3;4] [5;6;7;8;9];;
   Exception: Failure "zipwith".
   # zipwith (fun a b -> a,b) [1;2;3] ['a';'b';'c'];;
   - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
   # zipwith max [1;2;3;4] [4;3;2;1];;
   - : int list = [4; 3; 3; 4]

Words from problem not in sneak peek:
exception, takes, zipwith, lists, char, failure, combined

Words from problem yes in sneak peek:
and, int, are, if, use, val, two, same, 1, returns, 2, 5, 4, 7, 6, 9, new,
define, function, elements, 2pt, that, max, 3, b, 8, not, with, a, 10, c, 12,
of, list, ocaml, length, fun, the, failwith


Likeness: 0.8
sample_exams/cmps112-2016q4-midterm.tt
 2. Static type inference is a major feature of:
    (A) C
    (B) Java
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
major, inference, feature

Words from problem yes in sneak peek:
a, c, b, java, d, of, is, ocaml, 2, static, scheme, type


Likeness: 0.879310344828
sample_exams/cmps112-2016q4-midterm.tt
 6. In Smalltalk, the expression 3+4.  means:
    (A) The message + is sent to the number 3, the result of which is
        a function that accepts the message 4.
    (B) The message +4 is sent to the number 3.
    (C) The message 3+ is sent to the number 4.
    (D) The messages 3 and 4 are sent to the operator +.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
means, messages, accepts, result, operator, expression, sent

Words from problem yes in sneak peek:
and, 12pt, is, number, indicates, are, want, in, message, total, your,
smalltalk, if, 1, 0, missing, question, negative, write, to, 3, 4, which, 6,
answer, you, worth, function, multiple, risk, that, max, answers, choice, wrong,
b, letter, a, c, 12, don, d, column, of, correct, points, t, each, the, z, left


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-midterm.tt
 8. What is the signature of the Ocaml function List.hd (equivalent to
    car)?
    (A) 'a -> 'a list
    (B) 'a -> 'a
    (C) 'a list -> 'a list
    (D) 'a list -> 'a

Words from problem not in sneak peek:
equivalent, signature

Words from problem yes in sneak peek:
function, a, what, b, d, of, is, list, c, ocaml, to, car, 8, the, hd


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.826086956522
sample_exams/cmps112-2014q4-final.tt
2. Ocaml.  Define the functions reverse and sum using fold_left.
   (Fill in the blanks.)  [3pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a

   # let reverse = List.fold_left
   ________________________________________;;
   val reverse : '_a list -> '_a list

   # let sum = List.fold_left
   ________________________________________;;
   val sum : int list -> int

   # let length = List.fold_left
   ________________________________________;;
   val length : '_a list -> int

Words from problem not in sneak peek:
________________________________________, fold_left, 3pt, _a

Words from problem yes in sneak peek:
and, a, functions, blanks, reverse, val, int, sum, list, ocaml, length, 2, let,
in, using, the, define, b, fill


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
8. Prolog.  Given the graph shown here, write edge facts to describe
   it.  Write a rule adjacent which uses edge to determine if two
   nodes are adjacent.  [2pt]

   .PS 0.75i
   A: circle "a"
   B: circle "b" at A+(-4*circlerad,-4*circlerad)
   C: circle "c" at A+(0,-4*circlerad)
   D: circle "d" at A+(4*circlerad,-4*circlerad)
   line from A to B chop
   line from A to C chop
   line from A to D chop
   line from B to C chop
   line from C to D chop
   .PE

Words from problem not in sneak peek:
shown, describe, rule, uses, determine, 75i

Words from problem yes in sneak peek:
it, are, facts, if, ps, given, from, 0, graph, two, write, to, circlerad, 4,
which, pe, 8, nodes, 2pt, here, line, circle, a, c, b, d, adjacent, chop, edge,
the, prolog, at


Likeness: 0.840909090909
sample_exams/cmps112-2014q4-final.tt
12. Define a function range with two integer arguments and which
   returns a list of all arguments in order including the two
   arguments.  If the first number is larger than the second, return
   an empty list.  [3pt]

    (a) Ocaml.
        # range 2 7;;
        - : int list = [2; 3; 4; 5; 6; 7]
        # range 7 2;;
        - : int list = []

    (b) Scheme.
        > (range 2 7)
        (2 3 4 5 6 7)
        > (range 7 2)
        ()

    (c) Perl.
        print "[@{[range(2,7)]}]\n";
        [2 3 4 5 6 7]
        print "[@{[range(7,2)]}]\n";
        []

Words from problem not in sneak peek:
larger, 3pt, range, including, print, integer, empty

Words from problem yes in sneak peek:
and, all, int, is, number, an, second, in, if, 4, perl, returns, 2, 5,
arguments, which, 6, scheme, define, function, return, 7, 3, 12, two, with,
than, a, c, b, of, list, ocaml, n, the, order, first


Likeness: 0.84
sample_exams/cmps112-2014q4-final.tt
13. Write a function that takes two lists as arguments and which
   returns a single list where each element is a list of corresponding
   pairs.  If the lists are of different lengths, trailing elements of
   the longer list are ignored.

    (a) Scheme.  [2pt]
        > (pairthem '(1 2 3 4) '(a b c d e))
        ((1 a) (2 b) (3 c) (4 d))
        > (pairthem '(1 2 3 4 5) '(a b))
        ((1 a) (2 b))

    (b) Ocaml.  [2pt]
        # pairthem [1;2;3] ['a';'b';'c';'d'];;
        - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
        # pairthem [1;2;3;4;5] ['a';'b'];;
        - : (int * char) list = [(1, 'a'); (2, 'b')]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
ignored, different, corresponding, takes, lengths, pairs, lists, char, pairthem,
trailing, single, longer

Words from problem yes in sneak peek:
and, correct, 2pt, int, 12pt, is, number, negative, indicates, as, are, want,
total, your, if, 1, to, that, question, two, write, 0, returns, 2, 5, arguments,
which, answer, you, scheme, worth, 4, function, elements, multiple, risk,
missing, max, 13, answers, 3, wrong, b, letter, e, choice, a, c, 12, don, d,
column, of, list, ocaml, element, points, t, each, the, z, where, left


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
 1. What is not to be avoided in a pure functional language?
    (A) goto
    (B) lambda
    (C) loops
    (D) variables

Words from problem not in sneak peek:
loops, avoided, goto

Words from problem yes in sneak peek:
a, be, what, b, d, language, is, c, functional, 1, to, pure, in, not, variables,
lambda


Likeness: 0.863636363636
sample_exams/cmps112-2014q4-final.tt
 3. What is the expected running time of fold left and fold right on a
    list of length $n$?
    (A) fold left $ O ( 1 ) $;  fold right $ O ( 1 ) $
    (B) fold left $ O ( 1 ) $;  fold right $ O ( n ) $
    (C) fold left $ O ( n ) $;  fold right $ O ( 1 ) $
    (D) fold left $ O ( n ) $;  fold right $ O ( n ) $

Words from problem not in sneak peek:
expected, running, time

Words from problem yes in sneak peek:
and, a, what, right, d, on, of, is, list, c, o, n, 1, fold, 3, b, length, the,
left


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 1. Which language is not completely strongly typed?
    (A) C++
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
strongly, typed, completely

Words from problem yes in sneak peek:
a, c, b, d, language, is, perl, 1, which, not, scheme, smalltalk


Likeness: 0.833333333333
sample_exams/cmps112-2014q4-final.tt
 7. Which is a fully curried lazy functional language with
    overloading?
    (A) Haskell
    (B) Ocaml
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
fully, lazy, curried

Words from problem yes in sneak peek:
a, c, b, which, language, is, functional, ocaml, overloading, haskell, 7,
scheme, with, smalltalk, d


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 9. In Perl, what will print the current date and time?
    (A) print "date";
    (B) print 'date';
    (C) print (date);
    (D) print `date`;

Words from problem not in sneak peek:
date, print, time

Words from problem yes in sneak peek:
and, will, what, b, d, c, perl, current, a, in, 9, the


Likeness: 0.888888888889
sample_exams/cmps112-2014q4-final.tt
12. ``Go To Statement Considered Harmful''
    (A) Edsger Dijkstra
    (B) C.A.R. Hoare
    (C) Donald Knuth
    (D) Niklaus Wirth


Words from problem not in sneak peek:
hoare, r

Words from problem yes in sneak peek:
a, c, 12, statement, considered, niklaus, dijkstra, wirth, harmful, to, donald,
b, edsger, go, knuth, d


Likeness: 0.823008849558
sample_exams/cmps112-2014q4-test1.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Basic,
   C++, C, COBOL, FORTRAN, Haskell, Intercal, Java, Lisp, ML, OCaml,
   Pascal, Perl, PL/I, Prolog, Simula 67.  (Grading:  deduct 1/2 point
   for each wrong or missing answer, but do not score less than 0.)
   [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, scientific, business,
missing, processing, here, described, by, c, language, of, programming, ocaml,
simulation, s, contribution, or, first, among, point, 60, haskell, 67, from, to,
structured, perl, 2, way, basic, was, pl, that, but, simula, grace, ibm, bjarne,
ml, following, algol, prolog, and, is, cobol, at, in, fill, influenced, write,
answer, used, wirth, most, wrong, awk, designed, included, intercal, data, a,
java, i, fortran, the


Likeness: 0.869565217391
sample_exams/cmps112-2014q4-test1.tt
 9. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4

Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 4, 7, in, 9, the, define, might,
smalltalk, if


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-midterm.tt
3. Scheme.  Define the tail-recursive function foldl so that it may be
   used in the following example.  [2pt]
   > (define (sum list) (foldl + 0 list))
   > (sum '(1 2 3))
   6

Words from problem not in sneak peek:
may, recursive, foldl, example

Words from problem yes in sneak peek:
function, be, tail, 2pt, that, sum, 6, list, it, used, 1, 0, 3, 2, so, in,
following, the, scheme, define


Likeness: 0.847826086957
sample_exams/cmps112-2016q4-midterm.tt
7. Ocaml.  Define the function zipwith that takes a function and two
   lists and returns a new list with the elements combined.  Use
   failwith if the lists are not of the same length.  [2pt]
   val zipwith : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
   # zipwith (+) [1;2;3;4] [5;6;7;8];;
   - : int list = [6; 8; 10; 12]
   # zipwith (+) [1;2;3;4] [5;6;7;8;9];;
   Exception: Failure "zipwith".
   # zipwith (fun a b -> a,b) [1;2;3] ['a';'b';'c'];;
   - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
   # zipwith max [1;2;3;4] [4;3;2;1];;
   - : int list = [4; 3; 3; 4]

Words from problem not in sneak peek:
exception, takes, zipwith, lists, char, failure, combined

Words from problem yes in sneak peek:
and, int, are, if, use, val, two, same, 1, returns, 2, 5, 4, 7, 6, 9, new,
define, function, elements, 2pt, that, max, 3, b, 8, not, with, a, 10, c, 12,
of, list, ocaml, length, fun, the, failwith


Likeness: 0.8
sample_exams/cmps112-2016q4-midterm.tt
 2. Static type inference is a major feature of:
    (A) C
    (B) Java
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
major, inference, feature

Words from problem yes in sneak peek:
a, c, b, java, d, of, is, ocaml, 2, static, scheme, type


Likeness: 0.879310344828
sample_exams/cmps112-2016q4-midterm.tt
 6. In Smalltalk, the expression 3+4.  means:
    (A) The message + is sent to the number 3, the result of which is
        a function that accepts the message 4.
    (B) The message +4 is sent to the number 3.
    (C) The message 3+ is sent to the number 4.
    (D) The messages 3 and 4 are sent to the operator +.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
means, messages, accepts, result, operator, expression, sent

Words from problem yes in sneak peek:
and, 12pt, is, number, indicates, are, want, in, message, total, your,
smalltalk, if, 1, 0, missing, question, negative, write, to, 3, 4, which, 6,
answer, you, worth, function, multiple, risk, that, max, answers, choice, wrong,
b, letter, a, c, 12, don, d, column, of, correct, points, t, each, the, z, left


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-midterm.tt
 8. What is the signature of the Ocaml function List.hd (equivalent to
    car)?
    (A) 'a -> 'a list
    (B) 'a -> 'a
    (C) 'a list -> 'a list
    (D) 'a list -> 'a

Words from problem not in sneak peek:
equivalent, signature

Words from problem yes in sneak peek:
function, a, what, b, d, of, is, list, c, ocaml, to, car, 8, the, hd


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.826086956522
sample_exams/cmps112-2014q4-final.tt
2. Ocaml.  Define the functions reverse and sum using fold_left.
   (Fill in the blanks.)  [3pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a

   # let reverse = List.fold_left
   ________________________________________;;
   val reverse : '_a list -> '_a list

   # let sum = List.fold_left
   ________________________________________;;
   val sum : int list -> int

   # let length = List.fold_left
   ________________________________________;;
   val length : '_a list -> int

Words from problem not in sneak peek:
________________________________________, fold_left, 3pt, _a

Words from problem yes in sneak peek:
and, a, functions, blanks, reverse, val, int, sum, list, ocaml, length, 2, let,
in, using, the, define, b, fill


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
8. Prolog.  Given the graph shown here, write edge facts to describe
   it.  Write a rule adjacent which uses edge to determine if two
   nodes are adjacent.  [2pt]

   .PS 0.75i
   A: circle "a"
   B: circle "b" at A+(-4*circlerad,-4*circlerad)
   C: circle "c" at A+(0,-4*circlerad)
   D: circle "d" at A+(4*circlerad,-4*circlerad)
   line from A to B chop
   line from A to C chop
   line from A to D chop
   line from B to C chop
   line from C to D chop
   .PE

Words from problem not in sneak peek:
shown, describe, rule, uses, determine, 75i

Words from problem yes in sneak peek:
it, are, facts, if, ps, given, from, 0, graph, two, write, to, circlerad, 4,
which, pe, 8, nodes, 2pt, here, line, circle, a, c, b, d, adjacent, chop, edge,
the, prolog, at


Likeness: 0.840909090909
sample_exams/cmps112-2014q4-final.tt
12. Define a function range with two integer arguments and which
   returns a list of all arguments in order including the two
   arguments.  If the first number is larger than the second, return
   an empty list.  [3pt]

    (a) Ocaml.
        # range 2 7;;
        - : int list = [2; 3; 4; 5; 6; 7]
        # range 7 2;;
        - : int list = []

    (b) Scheme.
        > (range 2 7)
        (2 3 4 5 6 7)
        > (range 7 2)
        ()

    (c) Perl.
        print "[@{[range(2,7)]}]\n";
        [2 3 4 5 6 7]
        print "[@{[range(7,2)]}]\n";
        []

Words from problem not in sneak peek:
larger, 3pt, range, including, print, integer, empty

Words from problem yes in sneak peek:
and, all, int, is, number, an, second, in, if, 4, perl, returns, 2, 5,
arguments, which, 6, scheme, define, function, return, 7, 3, 12, two, with,
than, a, c, b, of, list, ocaml, n, the, order, first


Likeness: 0.84
sample_exams/cmps112-2014q4-final.tt
13. Write a function that takes two lists as arguments and which
   returns a single list where each element is a list of corresponding
   pairs.  If the lists are of different lengths, trailing elements of
   the longer list are ignored.

    (a) Scheme.  [2pt]
        > (pairthem '(1 2 3 4) '(a b c d e))
        ((1 a) (2 b) (3 c) (4 d))
        > (pairthem '(1 2 3 4 5) '(a b))
        ((1 a) (2 b))

    (b) Ocaml.  [2pt]
        # pairthem [1;2;3] ['a';'b';'c';'d'];;
        - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
        # pairthem [1;2;3;4;5] ['a';'b'];;
        - : (int * char) list = [(1, 'a'); (2, 'b')]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
ignored, different, corresponding, takes, lengths, pairs, lists, char, pairthem,
trailing, single, longer

Words from problem yes in sneak peek:
and, correct, 2pt, int, 12pt, is, number, negative, indicates, as, are, want,
total, your, if, 1, to, that, question, two, write, 0, returns, 2, 5, arguments,
which, answer, you, scheme, worth, 4, function, elements, multiple, risk,
missing, max, 13, answers, 3, wrong, b, letter, e, choice, a, c, 12, don, d,
column, of, list, ocaml, element, points, t, each, the, z, where, left


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
 1. What is not to be avoided in a pure functional language?
    (A) goto
    (B) lambda
    (C) loops
    (D) variables

Words from problem not in sneak peek:
loops, avoided, goto

Words from problem yes in sneak peek:
a, be, what, b, d, language, is, c, functional, 1, to, pure, in, not, variables,
lambda


Likeness: 0.863636363636
sample_exams/cmps112-2014q4-final.tt
 3. What is the expected running time of fold left and fold right on a
    list of length $n$?
    (A) fold left $ O ( 1 ) $;  fold right $ O ( 1 ) $
    (B) fold left $ O ( 1 ) $;  fold right $ O ( n ) $
    (C) fold left $ O ( n ) $;  fold right $ O ( 1 ) $
    (D) fold left $ O ( n ) $;  fold right $ O ( n ) $

Words from problem not in sneak peek:
expected, running, time

Words from problem yes in sneak peek:
and, a, what, right, d, on, of, is, list, c, o, n, 1, fold, 3, b, length, the,
left


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 1. Which language is not completely strongly typed?
    (A) C++
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
strongly, typed, completely

Words from problem yes in sneak peek:
a, c, b, d, language, is, perl, 1, which, not, scheme, smalltalk


Likeness: 0.833333333333
sample_exams/cmps112-2014q4-final.tt
 7. Which is a fully curried lazy functional language with
    overloading?
    (A) Haskell
    (B) Ocaml
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
fully, lazy, curried

Words from problem yes in sneak peek:
a, c, b, which, language, is, functional, ocaml, overloading, haskell, 7,
scheme, with, smalltalk, d


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 9. In Perl, what will print the current date and time?
    (A) print "date";
    (B) print 'date';
    (C) print (date);
    (D) print `date`;

Words from problem not in sneak peek:
date, print, time

Words from problem yes in sneak peek:
and, will, what, b, d, c, perl, current, a, in, 9, the


Likeness: 0.888888888889
sample_exams/cmps112-2014q4-final.tt
12. ``Go To Statement Considered Harmful''
    (A) Edsger Dijkstra
    (B) C.A.R. Hoare
    (C) Donald Knuth
    (D) Niklaus Wirth


Words from problem not in sneak peek:
hoare, r

Words from problem yes in sneak peek:
a, c, 12, statement, considered, niklaus, dijkstra, wirth, harmful, to, donald,
b, edsger, go, knuth, d


Likeness: 0.823008849558
sample_exams/cmps112-2014q4-test1.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Basic,
   C++, C, COBOL, FORTRAN, Haskell, Intercal, Java, Lisp, ML, OCaml,
   Pascal, Perl, PL/I, Prolog, Simula 67.  (Grading:  deduct 1/2 point
   for each wrong or missing answer, but do not score less than 0.)
   [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, scientific, business,
missing, processing, here, described, by, c, language, of, programming, ocaml,
simulation, s, contribution, or, first, among, point, 60, haskell, 67, from, to,
structured, perl, 2, way, basic, was, pl, that, but, simula, grace, ibm, bjarne,
ml, following, algol, prolog, and, is, cobol, at, in, fill, influenced, write,
answer, used, wirth, most, wrong, awk, designed, included, intercal, data, a,
java, i, fortran, the


Likeness: 0.869565217391
sample_exams/cmps112-2014q4-test1.tt
 9. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4

Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 4, 7, in, 9, the, define, might,
smalltalk, if


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-midterm.tt
3. Scheme.  Define the tail-recursive function foldl so that it may be
   used in the following example.  [2pt]
   > (define (sum list) (foldl + 0 list))
   > (sum '(1 2 3))
   6

Words from problem not in sneak peek:
may, recursive, foldl, example

Words from problem yes in sneak peek:
function, be, tail, 2pt, that, sum, 6, list, it, used, 1, 0, 3, 2, so, in,
following, the, scheme, define


Likeness: 0.847826086957
sample_exams/cmps112-2016q4-midterm.tt
7. Ocaml.  Define the function zipwith that takes a function and two
   lists and returns a new list with the elements combined.  Use
   failwith if the lists are not of the same length.  [2pt]
   val zipwith : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
   # zipwith (+) [1;2;3;4] [5;6;7;8];;
   - : int list = [6; 8; 10; 12]
   # zipwith (+) [1;2;3;4] [5;6;7;8;9];;
   Exception: Failure "zipwith".
   # zipwith (fun a b -> a,b) [1;2;3] ['a';'b';'c'];;
   - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
   # zipwith max [1;2;3;4] [4;3;2;1];;
   - : int list = [4; 3; 3; 4]

Words from problem not in sneak peek:
exception, takes, zipwith, lists, char, failure, combined

Words from problem yes in sneak peek:
and, int, are, if, use, val, two, same, 1, returns, 2, 5, 4, 7, 6, 9, new,
define, function, elements, 2pt, that, max, 3, b, 8, not, with, a, 10, c, 12,
of, list, ocaml, length, fun, the, failwith


Likeness: 0.8
sample_exams/cmps112-2016q4-midterm.tt
 2. Static type inference is a major feature of:
    (A) C
    (B) Java
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
major, inference, feature

Words from problem yes in sneak peek:
a, c, b, java, d, of, is, ocaml, 2, static, scheme, type


Likeness: 0.879310344828
sample_exams/cmps112-2016q4-midterm.tt
 6. In Smalltalk, the expression 3+4.  means:
    (A) The message + is sent to the number 3, the result of which is
        a function that accepts the message 4.
    (B) The message +4 is sent to the number 3.
    (C) The message 3+ is sent to the number 4.
    (D) The messages 3 and 4 are sent to the operator +.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
means, messages, accepts, result, operator, expression, sent

Words from problem yes in sneak peek:
and, 12pt, is, number, indicates, are, want, in, message, total, your,
smalltalk, if, 1, 0, missing, question, negative, write, to, 3, 4, which, 6,
answer, you, worth, function, multiple, risk, that, max, answers, choice, wrong,
b, letter, a, c, 12, don, d, column, of, correct, points, t, each, the, z, left


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-midterm.tt
 8. What is the signature of the Ocaml function List.hd (equivalent to
    car)?
    (A) 'a -> 'a list
    (B) 'a -> 'a
    (C) 'a list -> 'a list
    (D) 'a list -> 'a

Words from problem not in sneak peek:
equivalent, signature

Words from problem yes in sneak peek:
function, a, what, b, d, of, is, list, c, ocaml, to, car, 8, the, hd


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-final.tt
10. Ocaml:  Write the function reverse which reverses list.  Do not use
    any higher-order functions.  Your function must be tail-recursive or
    use a local tail-recursive helper.  [2pt]
    # reverse;;
    - : 'a list -> 'a list
    # reverse [1;2;3];;
    - : int list = [3; 2; 1]

Words from problem not in sneak peek:
must, local, recursive, reverses

Words from problem yes in sneak peek:
helper, do, int, any, write, use, 3, your, 1, tail, 2, which, higher, function,
be, 2pt, functions, not, a, 10, reverse, list, ocaml, or, the, order


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-final.tt
14. Prolog:  Define the function product, which produces the product of
    all the numbers in a list.  [2pt]
    | ?- product(N,[1,2,3,4,5]).
    N = 120
    | ?- product(N,[]).
    N = 1

Words from problem not in sneak peek:
120, numbers, 14, produces

Words from problem yes in sneak peek:
function, a, all, 2pt, of, list, product, n, 1, 3, 2, 5, 4, which, in, the,
prolog, define


Likeness: 0.869565217391
sample_exams/cmps112-2009q1-final.tt
15. Scheme:  Write the function elim, which takes a symbol and a list
    and returns a list consisting of elements of the list starting with
    the first one that is eqv?  to its first argument;  or the empty
    list, if none.  [2pt]
    > (elim 3 '(5 4 3 2 1))
    (3 2 1)
    > (elim 9 '(1 2 3))
    ()
    > (elim 1 '(1 2 3 4))
    (1 2 3 4)

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
none, takes, elim, symbol, eqv, 11pt, starting, consisting, empty

Words from problem yes in sneak peek:
and, 2pt, is, number, one, indicates, are, want, total, its, if, 1, to, that,
question, 3, your, write, 0, returns, 2, 5, 4, which, 9, you, scheme, correct,
first, function, a, elements, multiple, risk, missing, max, answers, argument,
answer, wrong, negative, letter, 15, choice, with, 11, c, b, don, column, of,
list, worth, points, t, each, the, z, or, left


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
 1. Haskell is a purely functional language which maintains state using
    a:
    (A) closure
    (B) daemon
    (C) monad
    (D) thunk

Words from problem not in sneak peek:
purely, daemon, maintains

Words from problem yes in sneak peek:
a, closure, c, b, d, language, monad, is, functional, 1, thunk, state, haskell,
which, using


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
10. If a is a list, which expression produces the same list?
    (A) (car (cdr (cons a))
    (B) (car (cons a (cdr a))
    (C) (cons (car a) (cdr a))
    (D) (cons (cdr a) (car a))

Words from problem not in sneak peek:
expression, produces

Words from problem yes in sneak peek:
a, 10, c, cons, d, car, is, list, same, b, cdr, which, the, if


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-final.tt
11. The Java class that permits a process to have multiple things done
    concurrently is:
    (A) Daemon
    (B) Runnable
    (C) Task
    (D) Thread

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
concurrently, runnable, thread, process, things, daemon, 11pt, task, done

Words from problem yes in sneak peek:
have, is, number, indicates, are, want, total, your, if, 1, java, to, that,
question, negative, write, 0, answer, you, worth, 11, multiple, risk, missing,
max, answers, choice, wrong, letter, class, a, c, b, don, d, permits, column,
of, correct, points, t, each, the, z, left


Likeness: 0.875
sample_exams/cmps112-2009q1-final.tt
 1. What is the type of swap?
    let swap f x y = f y x;;
    (A) ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a
    (B) ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b
    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
    (D) ('a -> 'b) -> ('c -> 'a) -> 'c -> 'b

Words from problem not in sneak peek:
y, swap

Words from problem yes in sneak peek:
a, what, b, d, f, of, is, list, c, 1, let, x, the, type


Likeness: 0.894736842105
sample_exams/cmps112-2009q1-final.tt
 8. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, which,
following, 8, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2009q1-test1.tt
10. In C++, if we have a call of the form a.f(x,y), inside the function
    f, how is a field x in the object a referred to?
    (A) this->*x
    (B) this->x
    (C) this.x
    (D) this[x]

Words from problem not in sneak peek:
y, inside, call, form, referred

Words from problem yes in sneak peek:
function, field, we, b, d, f, to, this, of, is, object, c, 10, how, a, have, in,
x, the, if


Likeness: 0.818181818182
sample_exams/cmps112-2009q1-test1.tt
11. A Case against the GO TO Statement.
    (A) Edsger Dijkstra
    (B) Grace Hopper
    (C) Donald Knuth
    (D) Niklaus Wirth

____________________

   Total:  31 *


Words from problem not in sneak peek:
case, ____________________, 31, against

Words from problem yes in sneak peek:
a, 11, c, b, d, niklaus, hopper, dijkstra, wirth, to, donald, statement, go,
knuth, the, total, grace, edsger


Likeness: 0.814814814815
sample_exams/cmps112-2009q1-test2.tt
 1. Scheme:  The following function by filius Bonacci takes $ O ( 2 sup
    n ) $ time and $ O ( n ) $ stack.  Recode it using a helper function
    so that it takes $ O ( n ) $ time and $ O ( 1 ) $ stack.  [2pt]
    (define (f n) (if (< n 2) n (+ (f (- n 1)) (f (- n 2)))))

Words from problem not in sneak peek:
filius, bonacci, takes, recode, time

Words from problem yes in sneak peek:
and, helper, it, if, by, 1, 2, sup, scheme, define, function, 2pt, that, using,
stack, a, f, o, n, so, following, the


Likeness: 0.85
sample_exams/cmps112-2009q1-test2.tt
 3. Scheme:  Without using any higher-order functions, define the
    function map whose first argument is a function, which is applied to
    each element of its second argument, a list.  The result returned as
    a new list.  [2pt]

    > (map (lambda (x) (* x x)) '(1 2 3 4 5))
    (1 4 9 16 25)

Words from problem not in sneak peek:
applied, whose, returned, 16, result, 25

Words from problem yes in sneak peek:
is, argument, second, its, functions, any, 1, to, 3, 2, 5, 4, which, 9, new,
scheme, define, function, map, 2pt, first, using, a, of, list, as, element,
without, each, x, the, higher, order, lambda


Likeness: 0.840579710145
sample_exams/cmps112-2009q1-test2.tt
 8. Scheme:  Without using any higher order functions, code reverse,
    which reverses a list.  Hint:  Think about two stacks.  Use tail
    recursive form and a helper function that uses accumulator style.
    [2pt]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write `Z' if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
about, code, recursive, form, hint, stacks, think, accumulator, 11pt, uses,
reverses

Words from problem yes in sneak peek:
and, 2pt, helper, number, negative, indicates, are, want, total, your, if,
write, style, to, that, question, two, any, 1, 0, tail, without, which, answer,
8, you, scheme, correct, higher, function, a, multiple, risk, missing, max, use,
functions, answers, choice, wrong, letter, using, 11, c, b, don, reverse,
column, of, list, worth, points, t, each, the, z, order, left


Likeness: 0.866666666667
sample_exams/cmps112-2009q1-test2.tt
 1. What expression will print (3)?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, 1, what, b, cdar, d, c, will, 3, 2, cadr, caar, cddr


Likeness: 0.8
sample_exams/cmps112-2009q1-test2.tt
 3. What might cause a dangling pointer in C++?
    (A) catch
    (B) delete
    (C) new
    (D) throw

Words from problem not in sneak peek:
dangling, catch, delete

Words from problem yes in sneak peek:
a, c, b, d, cause, what, 3, in, new, might, throw, pointer


Likeness: 0.888888888889
sample_exams/cmps112-2009q1-test2.tt
 8. Both Perl and Scheme have type systems which are:
    (A) strong and dynamic.
    (B) strong and static.
    (C) weak and dynamic.
    (D) weak and static.

Words from problem not in sneak peek:
both, systems

Words from problem yes in sneak peek:
and, a, c, b, d, dynamic, weak, perl, have, static, are, which, 8, scheme,
strong, type


Likeness: 0.833333333333
sample_exams/cmps112-2009q1-test2.tt
10. In C++, which of these operators is ``lazy''?
    (A) &&
    (B) ++
    (C) <<
    (D) ==

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, 10, c, b, d, these, of, is, which, in


Likeness: 0.864864864865
sample_exams/cmps112-2011q2-final.tt
 1. Ocaml:  Define a function evenlen in Ocaml which returns true if
    the list's length is even and false if not.  It must be tail-
    recursive and may not use the function List.length or any of the
    folding functions.  [2pt]

    # evenlen [];;
    - : bool = true
    # evenlen [1];;
    - : bool = false
    # evenlen [1;2;3;4];;
    - : bool = true

Words from problem not in sneak peek:
may, folding, recursive, evenlen, must

Words from problem yes in sneak peek:
and, false, is, it, in, any, if, even, use, returns, 1, 3, 2, bool, 4, which,
define, function, be, 2pt, s, functions, not, true, a, tail, of, list, ocaml,
length, the, or


Likeness: 0.852941176471
sample_exams/cmps112-2011q2-final.tt
 2. Prolog:  Define some facts or rules such that the predicate
    oddlen/1 succeeds if the length of its list is odd and fails
    otherwise.  Do not do any computation on the length of the list.
    [2pt]

    | ?- oddlen([]).
    no
    | ?- oddlen([1]).
    yes
    | ?- oddlen([1,2,3,4]).
    no

Words from problem not in sneak peek:
such, yes, otherwise, fails, succeeds

Words from problem yes in sneak peek:
and, oddlen, some, computation, facts, odd, any, if, no, its, 1, 3, 2, 4, is,
define, do, predicate, 2pt, that, rules, not, on, of, list, length, the, or,
prolog


Likeness: 0.862068965517
sample_exams/cmps112-2011q2-final.tt
 5. Haskell:  Consider the following two Ocaml functions.  Define the
    functions filter and map in Haskell in terms of list
    comprehensions.  [2pt]

    # filter;;
    - : ('a -> bool) -> 'a list -> 'a list = <fun>
    # filter ((>)4) [3; 1; 4; 1; 5; 9];;
    - : int list = [3; 1; 1]
    # map;;
    - : ('a -> 'b) -> 'a list -> 'b list = <fun>
    # map ((-)8) [3; 1; 4; 1; 5; 9];;
    - : int list = [5; 7; 4; 7; 3; -1]

Words from problem not in sneak peek:
filter, terms, consider, comprehensions

Words from problem yes in sneak peek:
and, int, haskell, in, functions, two, 1, 3, 5, 4, 7, 9, bool, define, map, 2pt,
fun, 8, a, b, of, list, ocaml, following, the


Likeness: 0.866666666667
sample_exams/cmps112-2011q2-final.tt
 7. Prolog:  Given the following graph, Define several facts called
    edge which define the graph.  Also, define a rule adjacent which
    can be used to test whether or not two nodes are adjacent to each
    other.  [2pt]

    .PS 0.75i
    A: circle "a"
    B: circle "b" at A+(4*circlerad,0)
    C: circle "c" at B+(4*circlerad,0)
    D: circle "d" at B-(0,4*circlerad)
    E: circle "e" at A-(0,4*circlerad)
    line from A to B chop
    line from B to C chop
    line from B to D chop
    line from D to E chop
    line from A to E chop
    line from C to D chop
    .PE

Words from problem not in sneak peek:
whether, rule, also, test, 75i, several

Words from problem yes in sneak peek:
are, facts, ps, given, from, 0, graph, two, to, other, circlerad, 4, 7, which,
nodes, define, be, used, 2pt, pe, not, line, circle, a, c, b, e, d, adjacent,
called, chop, edge, can, each, following, the, prolog, or, at


Likeness: 0.875
sample_exams/cmps112-2011q2-final.tt
12. Prolog:  Define after/3, which returns in its third argument all
    of the elements of the second argument that appear after the first
    argument.  Return [] if not found.  [2pt]

    | ?- after(3,[1,2,3,4,5,6],X).
    X = [4,5,6] ?
    yes
    | ?- after(0,[1,2,3,4,5,6],X).
    X = [] ?
    yes
    | ?- after(6,[],X).
    X = [] ?
    yes

Words from problem not in sneak peek:
found, yes, appear, third

Words from problem yes in sneak peek:
all, argument, second, in, its, if, returns, 1, 0, 3, 2, 5, 4, which, 6, define,
elements, return, 2pt, that, after, not, 12, of, x, the, first, prolog


Likeness: 0.84
sample_exams/cmps112-2011q2-final.tt
13. Enter the names of these programming languages in the appropriate
    box:  C, C++, Haskell, Java, Ocaml, Perl, Prolog, Scheme.  [1pt]

                   +---------------------------+--------------------------+
                   |      strong typing        |       weak typing        |
    +--------------+---------------------------+--------------------------+
    |static types  |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+
    |dynamic types |                           |                          |
    |              |                           |                          |
    +--------------+---------------------------+--------------------------+

Words from problem not in sneak peek:
box, appropriate, names, typing

Words from problem yes in sneak peek:
c, strong, java, programming, enter, these, weak, of, dynamic, 13, perl,
languages, ocaml, haskell, static, 1pt, in, the, scheme, types, prolog


Likeness: 0.836363636364
sample_exams/cmps112-2011q2-final.tt
11. The first computer bug was so named in 1947 at:
    (A) Carnegie-Mellon
    (B) Harvard
    (C) Princeton
    (D) Stanford

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
named, mellon, princeton, stanford, 1947, carnegie, 11pt, harvard, bug

Words from problem yes in sneak peek:
number, indicates, computer, are, want, in, total, your, if, 1, 0, missing,
question, negative, write, to, answer, you, was, worth, first, 11, multiple,
risk, that, max, answers, choice, wrong, letter, a, c, b, don, d, column, of,
correct, left, points, so, t, each, the, z, at


Likeness: 0.814814814815
sample_exams/cmps112-2011q2-final.tt
 1. In Ocaml, what is the depth of recursive non-tail calls for the
    following functions, where $n$ is the length of the list argument?
    (A) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( 1 ) $
    (B) fold_left:  $ O ( 1 ) $;  fold_right:  $ O ( n ) $
    (C) fold_left:  $ O ( n ) $;  fold_right:  $ O ( 1 ) $
    (D) fold_left:  $ O ( n ) $;  fold_right:  $ O ( n ) $

Words from problem not in sneak peek:
fold_left, fold_right, recursive, calls, non

Words from problem yes in sneak peek:
is, argument, in, what, for, length, 1, tail, functions, a, c, b, d, of, list,
ocaml, o, n, depth, following, the, where


Likeness: 0.894736842105
sample_exams/cmps112-2011q2-final.tt
 4. Which expression will cause Scheme to print:
       (3)
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
print, expression

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, 4, which, scheme, cause, caar, cddr


Likeness: 0.821917808219
sample_exams/cmps112-2011q2-test1.tt
11. Draw a picture of the following Scheme expression.  For each cell,
    draw a rectangular box with two fields in it, and draw a pointer
    from inside the box to the thing being pointed at.  Atoms are
    drawn outside of all of these boxes.  [2pt]
    ((a b c) (d ((e)) f 6))

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
box, being, fields, pointed, outside, atoms, thing, boxes, 11pt, drawn,
rectangular, expression, inside

Words from problem yes in sneak peek:
and, all, number, two, indicates, 2pt, at, want, in, total, pointer, your, if,
are, write, from, for, to, missing, question, negative, 1, 0, 6, answer, you,
scheme, correct, picture, draw, multiple, risk, that, max, answers, it,
following, wrong, letter, e, choice, with, a, c, b, don, d, f, column, of, cell,
worth, these, points, t, each, 11, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test1.tt
 2. Which Scheme expression will evaluate to the atom 2?
    (A) (caar '(1 2 3))
    (B) (cadr '(1 2 3))
    (C) (cdar '(1 2 3))
    (D) (cddr '(1 2 3))

Words from problem not in sneak peek:
evaluate, expression, atom

Words from problem yes in sneak peek:
a, will, cadr, b, cdar, d, c, 1, to, 3, 2, which, the, scheme, caar, cddr


Likeness: 0.833333333333
sample_exams/cmps112-2011q2-test1.tt
10. Which expression will cause the empty list to be passed into f?
    (A) (f '())
    (B) (f ())
    (C) (f null?)
    (D) f (null)

Words from problem not in sneak peek:
expression, empty, passed

Words from problem yes in sneak peek:
a, 10, c, b, d, be, into, f, list, will, to, which, the, null, cause


Likeness: 0.820895522388
sample_exams/cmps112-2011q2-test2.tt
 8. Ocaml:  Define a function unzip which takes a list of tuples and
    returns a tuple of lists, the first list containing the first item
    in each tuple, and the second list, the second item.  [3pt]
    # let l1, l2 = unzip [(1, 'a'); (2, 'b'); (3, 'c')];;
    val l1 : int list = [1; 2; 3]
    val l2 : char list = ['a'; 'b'; 'c']

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
containing, unzip, takes, tuple, 3pt, lists, char, item, 11pt, tuples, l2, l1

Words from problem yes in sneak peek:
and, int, number, negative, indicates, second, are, want, in, total, your, if,
write, val, 0, missing, question, 3, 1, to, returns, 2, which, answer, 8, you,
worth, define, function, a, multiple, risk, that, max, first, answers, choice,
wrong, let, letter, 11, c, b, don, column, of, list, ocaml, correct, points, t,
each, the, z, left


Likeness: 0.842105263158
sample_exams/cmps112-2011q2-test2.tt
 1. Lazy evaluation of functions is the default in which language?
    (A) Fortran
    (B) Haskell
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
default, lazy, evaluation

Words from problem yes in sneak peek:
a, c, b, d, language, of, is, functions, ocaml, 1, fortran, haskell, which, in,
the, scheme


Likeness: 0.8125
sample_exams/cmps112-2011q2-test2.tt
 2. In Smalltalk, $ sqrt 2 $ can be computed with the following
    expression:
    (A) (sqrt 2)
    (B) 2 sqrt
    (C) sqrt (2)
    (D) sqrt 2.0;;

Words from problem not in sneak peek:
expression, computed, sqrt

Words from problem yes in sneak peek:
a, be, c, b, d, 0, 2, can, in, following, the, with, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2011q2-test2.tt
 3. In Smalltalk, an expression to which the value message may be sent
    in order to retrieve the value 9 is:
    (A) (4 + 5)
    (B) <4 + 5>
    (C) [4 + 5]
    (D) {4 + 5}

Words from problem not in sneak peek:
may, expression, retrieve, sent

Words from problem yes in sneak peek:
a, be, c, b, d, is, value, an, to, 3, 5, 4, which, in, 9, message, order, the,
smalltalk


Likeness: 0.818181818182
sample_exams/cmps112-2011q2-test2.tt
 7. How would the first element (the element with the smallest
    subscript) of a Smalltalk array be set?
    (A) (set! a 1 6).
    (B) a at:1 put:6.
    (C) a put:6 at:1.
    (D) a[1] := 6.

Words from problem not in sneak peek:
put, subscript, smallest, would

Words from problem yes in sneak peek:
a, be, c, set, d, of, element, 1, how, b, at, 7, 6, array, with, the, smalltalk,
first


Likeness: 0.882352941176
sample_exams/cmps112-2011q2-test2.tt
10. The style of programming in Smalltalk is:
    (A) functional
    (B) imperative
    (C) logic
    (D) object-oriented

Words from problem not in sneak peek:
imperative, logic

Words from problem yes in sneak peek:
a, 10, style, b, d, of, is, object, programming, c, functional, oriented, in,
the, smalltalk


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
 1. Ocaml:  Define a function split which takes a predicate and a list
    and returns a 2-tuple of lists, where all elements of the first
    list cause the predicate to return true, and all other elements
    are in the second list.  The elements must remain in the same
    order as on input.  [3pt]
    # split;;
    - : ('a -> bool) -> 'a list -> 'a list * 'a list = <fun>
    # split even [1; 3; 5; 2; 8; 4; 1; 10];;
    - : int list * int list = ([2; 8; 4; 10], [1; 3; 5; 1])

Words from problem not in sneak peek:
takes, tuple, 3pt, lists, remain, split, input, must

Words from problem yes in sneak peek:
and, all, int, ocaml, as, are, in, even, returns, same, 1, to, 3, 2, 5, 4,
which, bool, cause, define, function, predicate, elements, return, on, 8, true,
a, 10, of, list, second, fun, the, other, where, order, first


Likeness: 0.864864864865
sample_exams/cmps112-2012q1-final.tt
 2. Prolog:  Define a function filter which takes three arguments:  a
    predicate, an input list, and an output list.  The output list
    contains all elements of the input list for which the predicate is
    true, and in the same order.  [2pt]
    | ?- filter( even, [1,2,3,4,5,6,7,8], X).
    X = [2,4,6,8] ?

Words from problem not in sneak peek:
filter, input, output, takes, three

Words from problem yes in sneak peek:
and, all, is, an, in, even, for, arguments, contains, same, 1, 3, 2, 5, 4,
which, 6, 8, define, function, predicate, elements, 2pt, true, a, of, list, 7,
x, the, order, prolog


Likeness: 0.857142857143
sample_exams/cmps112-2012q1-final.tt
 1. What will make Smalltalk print 9?
    (A) (4 + 5) value.
    (B) (4 + 5) value:.
    (C) [4 + 5] value.
    (D) [4 + 5] value:.

Words from problem not in sneak peek:
print, make

Words from problem yes in sneak peek:
a, 1, what, b, d, c, value, will, 5, 4, 9, smalltalk


Likeness: 0.846153846154
sample_exams/cmps112-2012q1-final.tt
 2. In Smalltalk, what is 1.4142135623730951?
    (A) (sqrt 2)
    (B) 2 ** .5
    (C) 2 sqrt
    (D) sqrt (2)

Words from problem not in sneak peek:
4142135623730951, sqrt

Words from problem yes in sneak peek:
a, c, b, d, is, what, 1, 2, 5, in, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-final.tt
 6. In Perl, the default argument to a function requiring an argument,
    when none is given, is:
    (A) $!
    (B) $0
    (C) $_
    (D) @_

Words from problem not in sneak peek:
default, requiring, none, _

Words from problem yes in sneak peek:
a, function, given, b, d, to, c, is, in, when, argument, perl, 0, 6, the, an


Likeness: 0.826086956522
sample_exams/cmps112-2012q1-final.tt
11. In PL/I, a goto statement had the capability of being executed in
    one function and transver control to another function, perhaps the
    one that called it.  The equivalent feature of Java uses what
    keyword?
    (A) break
    (B) continue
    (C) throw
    (D) synchronized

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
executed, goto, synchronized, being, equivalent, feature, capability, 11pt,
uses, keyword, another, transver

Words from problem yes in sneak peek:
and, control, question, it, one, indicates, are, want, in, total, your, if,
write, what, java, to, perhaps, that, had, negative, 1, 0, continue, statement,
answer, you, worth, pl, function, 11, multiple, risk, missing, max, answers,
choice, break, wrong, letter, number, throw, a, c, b, don, d, i, of, correct,
column, points, t, each, the, z, called, left


Likeness: 0.85
sample_exams/cmps112-2012q1-final.tt
 1. In Java, if two functions have the same name in the same class,
    but have different signatures, this is referred to as:
    (A)

Words from problem not in sneak peek:
different, signatures, referred

Words from problem yes in sneak peek:
a, functions, java, name, this, is, two, same, 1, to, as, but, have, in, the,
class, if


Likeness: 0.894736842105
sample_exams/cmps112-2012q1-final.tt
 5. Which of the following data structures violates the spirit of
    functional programming?
    (A) array
    (B) list
    (C) stack
    (D) tree

Words from problem not in sneak peek:
spirit, violates

Words from problem yes in sneak peek:
a, the, c, b, d, of, programming, functional, tree, data, list, 5, which,
following, array, structures, stack


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 4. Define the same function sum using the higher-order function
    foldleft, whose arguments are a unit value, a binary function, and
    a list.  [1pt]

Words from problem not in sneak peek:
whose, foldleft, unit, binary

Words from problem yes in sneak peek:
function, and, are, sum, list, value, define, arguments, a, same, using, the,
higher, order, 1pt, 4


Likeness: 0.8
sample_exams/cmps112-2012q1-test1.tt
 6. Name the two kinds of ad hoc polymorphism and give an example of
    each.  [2pt]

Words from problem not in sneak peek:
kinds, example, give

Words from problem yes in sneak peek:
and, polymorphism, 2pt, of, 6, two, hoc, an, each, ad, the, name


Likeness: 0.833333333333
sample_exams/cmps112-2012q1-test1.tt
 2. Which of the following C operators is ``lazy''?
    (A) &&
    (B) ++
    (C) ==
    (D) >>

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 2, which, following, the


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
 2. Ocaml:  Define the function mapf whose first argument is a unary
    function, and second argument list.  The result is a list of the
    function applied to each element of the argument list.  Write a
    one-liner using fold_right, and not a recursive function.  [2pt] 1
    point.
    # fold_right;;
    - : ('a -> 'b -> 'b) -> 'a list -> 'b -> 'b = <fun>
    # mapf (fun x -> x + 2) [1;3;5;6];;
    - : int list = [3; 5; 7; 8]
    # mapf ((-)3) [1;2;5;6];;
    - : int list = [2; 1; -2; -3]

Words from problem not in sneak peek:
applied, whose, mapf, recursive, fold_right, liner, unary, result

Words from problem yes in sneak peek:
and, point, int, is, argument, one, second, 1, write, to, 3, 2, 5, 7, 6, 8,
define, function, 2pt, not, using, a, b, of, list, ocaml, element, each, fun, x,
the, first


Likeness: 0.828571428571
sample_exams/cmps112-2012q1-test2.tt
 4. Ocaml:  Define the functions car and cdr in Ocaml so that they
    work in the expected way.  Use pattern matching.  Neither function
    may call any other.  Use failwith for a [] argument.  [2pt]
    # car;;
    - : 'a list -> 'a = <fun>
    # cdr;;
    - : 'a list -> 'a list = <fun>
    # car [1;2;3;4];;
    - : int = 1
    # cdr [1;2;3;4];;
    - : int list = [2; 3; 4]

Words from problem not in sneak peek:
may, pattern, call, expected, neither, matching

Words from problem yes in sneak peek:
and, int, argument, cdr, in, any, functions, for, 1, 3, other, 4, way, define,
function, 2pt, that, use, they, 2, a, car, work, list, ocaml, so, fun, the,
failwith


Likeness: 0.823529411765
sample_exams/cmps112-2012q1-test2.tt
 7. Ocaml:  Define a function max such that given a function of two
    arguments giving a bool and a list, it returns Some maximum
    element of the list, and None otherwise.  [3pt]
    # type 'a opt = None | Some of 'a;;
    type 'a opt = None | Some of 'a
    # max;;
    - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
    # (>);;
    - : 'a -> 'a -> bool = <fun>
    # max (>) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 9
    # max (<) [3; 1; 4; 1; 5; 9];;
    - : int opt = Some 1
    # max (>) [];;
    - : 'a opt = None

Words from problem not in sneak peek:
opt, none, giving, 3pt, such, otherwise

Words from problem yes in sneak peek:
and, int, some, it, two, given, ocaml, arguments, returns, 1, 3, bool, 4, 7, 9,
5, type, define, function, that, max, a, of, list, maximum, element, fun, the


Likeness: 0.868421052632
sample_exams/cmps112-2012q1-test2.tt
 8. Scheme:  Define the function zipwith in Scheme.  Note that for
    both of these programs, if the first list is shorter, the value is
    used as the first argument, and if the second list is shorter, the
    value is the second argument to the function.  [4pt]
    > (zipwith - 5 '(9 8 7) '(5 4 3 2 1))
    (4 4 4 3 4)
    > (zipwith string-append "**"
      '("hello" "foo" "qux" "goto") '(" world" " bar"))
    ("hello world" "foo bar" "qux**" "goto**")

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [11pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   11 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
note, goto, both, qux, zipwith, shorter, 11pt, world, hello, append

Words from problem yes in sneak peek:
and, is, argument, indicates, as, are, want, in, total, your, if, 1, foo, for,
to, missing, question, negative, write, 0, 3, 4pt, 5, 4, 7, 9, 8, you, scheme,
worth, define, function, a, used, multiple, risk, that, max, first, answers,
number, answer, wrong, letter, 2, choice, string, 11, bar, c, b, don, programs,
these, of, list, second, value, correct, column, points, t, each, the, z, left


Likeness: 0.818181818182
sample_exams/cmps112-2012q1-test2.tt
 1. The type signature of (/.)  is:
    (A) float * float * float
    (B) float * float -> float
    (C) float -> float * float
    (D) float -> float -> float

Words from problem not in sneak peek:
float, signature

Words from problem yes in sneak peek:
a, c, b, d, of, is, 1, the, type


Likeness: 0.866666666667
sample_exams/cmps112-2012q1-test2.tt
 3. In Smalltalk, the expression 3-4/5-6 is equivalent to:
    (A) ((3-4)/5)-6
    (B) (3-(4/5))-6
    (C) (3-4)/(5-6)
    (D) 3-((4/5)-6)

Words from problem not in sneak peek:
equivalent, expression

Words from problem yes in sneak peek:
a, c, b, d, is, in, to, 3, 5, 4, 6, the, smalltalk


Likeness: 0.8
sample_exams/cmps112-2012q1-test2.tt
10. The following prints the number 6 in which language?
       stdout << 6 << Character nl.
    (A) Ocaml
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
character, prints, nl, stdout

Words from problem yes in sneak peek:
a, 10, c, b, d, language, 6, number, ocaml, perl, which, in, following, the,
scheme, smalltalk


Likeness: 0.848739495798
sample_exams/cmps112-2012q1-test2.tt
11. The classic paper ``Go To Statement Considered Harmful'', CACM,
    1968, was written by:
    (A) John Backus
    (B) Edsger Dijkstra
    (C) Grace Hopper
    (D) Donald Knuth

____________________

 He also said:
 · ``FORTRAN, the infantile disorder, by now nearly 20 years  old,  is
   hopelessly inadequate for whatever computer application you have in
   mind today:  it is now too clumsy, too risky, and too expensive  to
   use.''
 · ``PL/I,  the fatal disease, belongs more to the problem set than to
   the solution set.''
 · ``It is practically impossible to teach good  programming  to  stu-
   dents  that  have had a prior exposure to BASIC:  as potential pro-
   grammers they are mentally mutilated beyond hope of regeneration.''
 · ``The  use  of COBOL cripples the mind; its teaching should, there-
   fore, be regarded as a criminal offence.''
 · ``In the good old days physicists  repeated  each  other's  experi-
   ments,  just to be sure.  Today they stick to FORTRAN, so that they
   can share each other's programs, bugs included.''


Words from problem not in sneak peek:
said, 1968, stu, john, pro, there, ments, fore, ____________________, also,
written, paper, classic, grammers, dents, cacm, experi, he

Words from problem yes in sneak peek:
just, hopper, years, dijkstra, go, its, 20, regarded, had, should, fortran,
belongs, teaching, fatal, hope, good, offence, nearly, they, now, d, solution,
edsger, each, disorder, set, old, donald, computer, are, beyond, potential, for,
cripples, be, teach, by, c, of, programming, days, prior, s, today, backus,
regeneration, whatever, clumsy, impossible, expensive, use, to, physicists,
statement, basic, was, pl, too, that, mind, repeated, mutilated, stick, than,
11, b, practically, considered, can, problem, more, risky, and, grace,
inadequate, is, share, it, disease, as, cobol, have, in, hopelessly, infantile,
application, other, knuth, you, criminal, sure, harmful, included, mentally,
exposure, a, programs, i, bugs, so, the


Likeness: 0.826086956522
sample_exams/cmps112-2014q4-final.tt
2. Ocaml.  Define the functions reverse and sum using fold_left.
   (Fill in the blanks.)  [3pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a

   # let reverse = List.fold_left
   ________________________________________;;
   val reverse : '_a list -> '_a list

   # let sum = List.fold_left
   ________________________________________;;
   val sum : int list -> int

   # let length = List.fold_left
   ________________________________________;;
   val length : '_a list -> int

Words from problem not in sneak peek:
________________________________________, fold_left, 3pt, _a

Words from problem yes in sneak peek:
and, a, functions, blanks, reverse, val, int, sum, list, ocaml, length, 2, let,
in, using, the, define, b, fill


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
8. Prolog.  Given the graph shown here, write edge facts to describe
   it.  Write a rule adjacent which uses edge to determine if two
   nodes are adjacent.  [2pt]

   .PS 0.75i
   A: circle "a"
   B: circle "b" at A+(-4*circlerad,-4*circlerad)
   C: circle "c" at A+(0,-4*circlerad)
   D: circle "d" at A+(4*circlerad,-4*circlerad)
   line from A to B chop
   line from A to C chop
   line from A to D chop
   line from B to C chop
   line from C to D chop
   .PE

Words from problem not in sneak peek:
shown, describe, rule, uses, determine, 75i

Words from problem yes in sneak peek:
it, are, facts, if, ps, given, from, 0, graph, two, write, to, circlerad, 4,
which, pe, 8, nodes, 2pt, here, line, circle, a, c, b, d, adjacent, chop, edge,
the, prolog, at


Likeness: 0.840909090909
sample_exams/cmps112-2014q4-final.tt
12. Define a function range with two integer arguments and which
   returns a list of all arguments in order including the two
   arguments.  If the first number is larger than the second, return
   an empty list.  [3pt]

    (a) Ocaml.
        # range 2 7;;
        - : int list = [2; 3; 4; 5; 6; 7]
        # range 7 2;;
        - : int list = []

    (b) Scheme.
        > (range 2 7)
        (2 3 4 5 6 7)
        > (range 7 2)
        ()

    (c) Perl.
        print "[@{[range(2,7)]}]\n";
        [2 3 4 5 6 7]
        print "[@{[range(7,2)]}]\n";
        []

Words from problem not in sneak peek:
larger, 3pt, range, including, print, integer, empty

Words from problem yes in sneak peek:
and, all, int, is, number, an, second, in, if, 4, perl, returns, 2, 5,
arguments, which, 6, scheme, define, function, return, 7, 3, 12, two, with,
than, a, c, b, of, list, ocaml, n, the, order, first


Likeness: 0.84
sample_exams/cmps112-2014q4-final.tt
13. Write a function that takes two lists as arguments and which
   returns a single list where each element is a list of corresponding
   pairs.  If the lists are of different lengths, trailing elements of
   the longer list are ignored.

    (a) Scheme.  [2pt]
        > (pairthem '(1 2 3 4) '(a b c d e))
        ((1 a) (2 b) (3 c) (4 d))
        > (pairthem '(1 2 3 4 5) '(a b))
        ((1 a) (2 b))

    (b) Ocaml.  [2pt]
        # pairthem [1;2;3] ['a';'b';'c';'d'];;
        - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
        # pairthem [1;2;3;4;5] ['a';'b'];;
        - : (int * char) list = [(1, 'a'); (2, 'b')]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
ignored, different, corresponding, takes, lengths, pairs, lists, char, pairthem,
trailing, single, longer

Words from problem yes in sneak peek:
and, correct, 2pt, int, 12pt, is, number, negative, indicates, as, are, want,
total, your, if, 1, to, that, question, two, write, 0, returns, 2, 5, arguments,
which, answer, you, scheme, worth, 4, function, elements, multiple, risk,
missing, max, 13, answers, 3, wrong, b, letter, e, choice, a, c, 12, don, d,
column, of, list, ocaml, element, points, t, each, the, z, where, left


Likeness: 0.842105263158
sample_exams/cmps112-2014q4-final.tt
 1. What is not to be avoided in a pure functional language?
    (A) goto
    (B) lambda
    (C) loops
    (D) variables

Words from problem not in sneak peek:
loops, avoided, goto

Words from problem yes in sneak peek:
a, be, what, b, d, language, is, c, functional, 1, to, pure, in, not, variables,
lambda


Likeness: 0.863636363636
sample_exams/cmps112-2014q4-final.tt
 3. What is the expected running time of fold left and fold right on a
    list of length $n$?
    (A) fold left $ O ( 1 ) $;  fold right $ O ( 1 ) $
    (B) fold left $ O ( 1 ) $;  fold right $ O ( n ) $
    (C) fold left $ O ( n ) $;  fold right $ O ( 1 ) $
    (D) fold left $ O ( n ) $;  fold right $ O ( n ) $

Words from problem not in sneak peek:
expected, running, time

Words from problem yes in sneak peek:
and, a, what, right, d, on, of, is, list, c, o, n, 1, fold, 3, b, length, the,
left


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 1. Which language is not completely strongly typed?
    (A) C++
    (B) Perl
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
strongly, typed, completely

Words from problem yes in sneak peek:
a, c, b, d, language, is, perl, 1, which, not, scheme, smalltalk


Likeness: 0.833333333333
sample_exams/cmps112-2014q4-final.tt
 7. Which is a fully curried lazy functional language with
    overloading?
    (A) Haskell
    (B) Ocaml
    (C) Scheme
    (D) Smalltalk

Words from problem not in sneak peek:
fully, lazy, curried

Words from problem yes in sneak peek:
a, c, b, which, language, is, functional, ocaml, overloading, haskell, 7,
scheme, with, smalltalk, d


Likeness: 0.8
sample_exams/cmps112-2014q4-final.tt
 9. In Perl, what will print the current date and time?
    (A) print "date";
    (B) print 'date';
    (C) print (date);
    (D) print `date`;

Words from problem not in sneak peek:
date, print, time

Words from problem yes in sneak peek:
and, will, what, b, d, c, perl, current, a, in, 9, the


Likeness: 0.888888888889
sample_exams/cmps112-2014q4-final.tt
12. ``Go To Statement Considered Harmful''
    (A) Edsger Dijkstra
    (B) C.A.R. Hoare
    (C) Donald Knuth
    (D) Niklaus Wirth


Words from problem not in sneak peek:
hoare, r

Words from problem yes in sneak peek:
a, c, 12, statement, considered, niklaus, dijkstra, wirth, harmful, to, donald,
b, edsger, go, knuth, d


Likeness: 0.823008849558
sample_exams/cmps112-2014q4-test1.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Basic,
   C++, C, COBOL, FORTRAN, Haskell, Intercal, Java, Lisp, ML, OCaml,
   Pascal, Perl, PL/I, Prolog, Simula 67.  (Grading:  deduct 1/2 point
   for each wrong or missing answer, but do not score less than 0.)
   [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, scientific, business,
missing, processing, here, described, by, c, language, of, programming, ocaml,
simulation, s, contribution, or, first, among, point, 60, haskell, 67, from, to,
structured, perl, 2, way, basic, was, pl, that, but, simula, grace, ibm, bjarne,
ml, following, algol, prolog, and, is, cobol, at, in, fill, influenced, write,
answer, used, wirth, most, wrong, awk, designed, included, intercal, data, a,
java, i, fortran, the


Likeness: 0.869565217391
sample_exams/cmps112-2014q4-test1.tt
 9. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4

Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 4, 7, in, 9, the, define, might,
smalltalk, if


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
5. Scheme.  Write the function product in tail recursive accumulator
   style so that it computes the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
accumulator, computes, recursive, numbers

Words from problem yes in sneak peek:
function, a, product, that, of, list, style, it, write, tail, 5, in, so, the,
scheme, 1pt


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
7. Scheme.  Using foldl, define the function product, which computes
   the product of a list of numbers.  [1pt]

Words from problem not in sneak peek:
computes, numbers, foldl

Words from problem yes in sneak peek:
function, a, product, which, of, list, 7, using, the, scheme, 1pt, define


Likeness: 0.823529411765
sample_exams/cmps112-2014q4-test2.tt
10. Perl.  Write a line of code that uses map to compute the product
   of an array.  [1pt]

Words from problem not in sneak peek:
uses, code, compute

Words from problem yes in sneak peek:
a, 10, product, that, of, the, perl, write, to, map, array, an, line, 1pt


Likeness: 0.809523809524
sample_exams/cmps112-2014q4-test2.tt
 6. Java supports:
    (A) single inheritance only.
    (B) multiple (mixin) inheritance of functions (methods) but not
        fields.
    (C) multiple inheritance of functions (methods) and shared
        inheritance of fields.
    (D) multiple inheritance of functions (methods) and repeated
        inheritance of fields.

Words from problem not in sneak peek:
fields, single, supports, mixin

Words from problem yes in sneak peek:
a, and, functions, b, java, methods, inheritance, of, multiple, c, but, only, 6,
not, shared, repeated, d


Likeness: 0.8
sample_exams/cmps112-2014q4-test2.tt
 9. Which of these functions can be written in a tail-recursive style?
    (A) append
    (B) fold_right
    (C) map
    (D) reverse

Words from problem not in sneak peek:
written, fold_right, recursive, append

Words from problem yes in sneak peek:
a, be, functions, b, reverse, map, these, of, c, tail, style, can, which, in, 9,
d


Likeness: 0.875
sample_exams/cmps112-2014q4-test2.tt
10. In Smalltalk, how does one compute $ sqrt 2 $?
    (A) 2 **: 0.5
    (B) 2 sqrt
    (C) Number sqrt: 2
    (D) sqrt 2

Words from problem not in sneak peek:
compute, sqrt

Words from problem yes in sneak peek:
a, 10, c, b, d, how, number, one, 0, does, 5, in, 2, smalltalk


Likeness: 0.893617021277
sample_exams/cmps112-2015q4-test1.tt
2. Define the function filter whose first argument is a predicate and
   whose second argument is a list.  It returns a list consisting of
   all elements of the argument list which satisfy the predicate.  Do
   not use a higher-order function.

    (a) Scheme.  [2pt]
        > (filter (lambda (x) (> x 0)) '(1 -1 2 -3 5 -99 8))
        (1 2 5 8)
        > (filter even '(1 2 3 4 5 6 7 8 9))
        (2 4 6 8)

    (b) Ocaml.  [2pt]
        # filter;;
        - : ('a -> bool) -> 'a list -> 'a list = <fun>
        # filter (fun x -> x > 0) [1;-1;2;-3;5;-99;8];;
        - : int list = [1; 2; 5; 8]
        # filter even [1;2;3;4;5;6;7;8;9];;
        - : int list = [2; 4; 6; 8]

Words from problem not in sneak peek:
satisfy, whose, filter, 99, consisting

Words from problem yes in sneak peek:
and, all, int, is, argument, second, even, use, returns, 1, 0, 3, 2, bool, 4,
which, 6, 9, 5, scheme, define, function, do, predicate, elements, 2pt, first,
it, 8, not, a, b, of, list, ocaml, 7, fun, x, the, higher, order, lambda


Likeness: 0.883720930233
sample_exams/cmps112-2015q4-test1.tt
5. Define the function fold_left:  the first argument is a function to
   use to fold the list, the second argument is a unit value used to
   fold the first element, the third argument is a list.  Use tail
   recursion:  the function must use $ O ( 1 ) $ stack.

    (a) Scheme.  [2pt]
        > (define (length list) (fold_left (lambda (n _) (+ n 1)) 0
        list))
        > (define (sum list) (fold_left + 0 list))
        > (length '(1 2 3 4 5))
        5
        > (sum '(1 2 3 4 5))
        15

    (b) Ocaml.  [2pt]
        # fold_left;;
        - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
        # let length list = fold_left (fun n _ -> n + 1) 0 list;;
        val length : 'a list -> int = <fun>
        # let sum list = fold_left (+) 0 list;;
        val sum : int list -> int = <fun>
        # length [1;2;3;4;5];;
        - : int = 5
        # sum [1;2;3;4;5];;
        - : int = 15

Words from problem not in sneak peek:
third, fold_left, _, unit, must

Words from problem yes in sneak peek:
int, is, argument, fold, second, value, element, use, val, 0, recursion, sum, 3,
1, to, tail, 2, 5, 4, scheme, define, function, used, 2pt, let, stack, a, b, 15,
list, ocaml, o, n, length, fun, the, first, lambda


Likeness: 0.863636363636
sample_exams/cmps112-2015q4-test1.tt
 1. What kind of polymorphism is exhibited by generic classes in Java
    and template classes in C++?
    (A) conversion
    (B) inheritance
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
generic, classes, template

Words from problem yes in sneak peek:
and, a, what, b, java, d, inheritance, c, is, of, kind, exhibited, 1,
overloading, polymorphism, in, parametric, by, conversion


Likeness: 0.833333333333
sample_exams/cmps112-2015q4-test1.tt
 8. In C, C++, and Java, which operator is lazy?
    (A) ++
    (B) --
    (C) //
    (D) ||

Words from problem not in sneak peek:
operator, lazy

Words from problem yes in sneak peek:
and, a, c, b, java, d, is, which, in, 8


Likeness: 0.857142857143
sample_exams/cmps112-2015q4-test2.tt
 2. What is the Smalltalk expression for $ sqrt 2 $ ?
    (A) sqrt (2)
    (B) 2 sqrt
    (C) Number::sqrt 2
    (D) 2 ^ .5

Words from problem not in sneak peek:
expression, sqrt

Words from problem yes in sneak peek:
a, what, b, d, for, is, c, number, 2, 5, the, smalltalk


Likeness: 0.888888888889
sample_exams/cmps112-2015q4-test2.tt
 8. In Smalltalk what is the meaning of:
    foo bar + foo set: 3 + 4 next
    (A) ((foo bar) + foo) set: (3 + (4 next))
    (B) (foo (bar + foo)) set: ((3 + 4) next)
    (C) (foo bar) + (foo set: 3) + (4 next)
    (D) (foo bar) + (foo set: 3) + (4 next)

Words from problem not in sneak peek:
meaning, next

Words from problem yes in sneak peek:
a, what, set, bar, d, of, is, c, 3, b, 4, in, 8, the, foo, smalltalk


Likeness: 0.869565217391
sample_exams/cmps112-2015q4-test2.tt
12. If we define the block sum := [:i :j| i + j] in Smalltalk, how
    might we obtain the number 7?
    (A) 3 4 sum
    (B) 3 sum: 4
    (C) sum 3 value 4 value
    (D) sum value: 3 value: 4


Words from problem not in sneak peek:
j, obtain, block

Words from problem yes in sneak peek:
a, we, b, d, i, c, sum, number, value, how, 3, 12, 4, 7, in, the, define, might,
smalltalk, if


Likeness: 0.827586206897
sample_exams/cmps112-2016q4-final.tt
1. For each language described here, fill in the name of the language.
   Choose from among the following languages:  Algol 60, AWK, Bash,
   Basic, BCPL, C, C++, COBOL, Forth, FORTRAN, Haskell, Intercal,
   Java, Lisp, ML, OCaml, Pascal, Perl, PL/I, Prolog, Simula 67,
   Smalltalk.  Grading:  deduct ½ point for each wrong or missing
   answer, but do not score less than 0.  [3pt]

   +--------------+---------------------------------------------------------------------------------+
   |              |Bjarne Stroustrup's most noted contribution to language design.                  |
   +--------------+---------------------------------------------------------------------------------+
   |              |Business data processing language, designers included Grace Hopper.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Designed in Europe to express algorithms in a structured way.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |First version of Unix was 9000 lines of this language (plus some assembly code). |
   +--------------+---------------------------------------------------------------------------------+
   |              |List processing language typically used in artificial intelligence.              |
   +--------------+---------------------------------------------------------------------------------+
   |              |Numeric and scientific computation language developed at IBM.                    |
   +--------------+---------------------------------------------------------------------------------+
   |              |Simulation language that influenced the design of C++.                           |
   +--------------+---------------------------------------------------------------------------------+
   |              |Small language for structured programming designed by Niklaus Wirth.             |
   +--------------+---------------------------------------------------------------------------------+
   |              |Sun Microsystems claimed this language is ``write once, run anywhere''.          |
   +--------------+---------------------------------------------------------------------------------+

Words from problem not in sneak peek:
europe, code, run, intelligence, microsystems, express, 3pt, algorithms,
artificial, unix, version, plus, anywhere, sun, claimed, assembly, typically,
lines, 9000, once

Words from problem yes in sneak peek:
less, developed, hopper, pascal, computation, 1, than, languages, 0, stroustrup,
choose, do, niklaus, not, designers, name, lisp, list, this, each, small, noted,
deduct, some, numeric, design, for, grading, score, forth, scientific, business,
missing, processing, here, described, by, bash, c, language, of, programming,
ocaml, simulation, s, contribution, or, designed, among, point, 60, haskell, 67,
from, to, structured, perl, way, basic, was, pl, that, but, simula, grace, ibm,
bjarne, ml, following, algol, prolog, and, is, cobol, at, in, smalltalk, fill,
influenced, write, answer, used, wirth, most, wrong, awk, bcpl, included,
intercal, data, a, java, i, fortran, the, first


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-final.tt
 4. Earliest language which is an ancestor of Scheme.
    (A) BCPL
    (B) Cobol
    (C) Fortran
    (D) Lisp

Words from problem not in sneak peek:
ancestor, earliest

Words from problem yes in sneak peek:
a, c, b, d, language, lisp, of, is, an, fortran, cobol, 4, which, scheme, bcpl


Likeness: 0.863636363636
sample_exams/cmps112-2016q4-final.tt
 5. Besides C, the object-oriented language which is an ancestor of
    C++.
    (A) Algol 60
    (B) Fortran IV
    (C) Pascal
    (D) Simula 67

Words from problem not in sneak peek:
ancestor, besides, iv

Words from problem yes in sneak peek:
a, oriented, c, b, d, language, of, is, object, an, 60, fortran, pascal, 5,
which, 67, simula, algol, the


Likeness: 0.818181818182
sample_exams/cmps112-2016q4-final.tt
 6. In Smalltalk:  $ sqrt 2.0 $
    (A) (sqrt 2.0)
    (B) 2.0 sqrt
    (C) 2.718281828459045
    (D) sqrt (2.0)

Words from problem not in sneak peek:
sqrt, 718281828459045

Words from problem yes in sneak peek:
a, c, b, d, in, 0, 2, 6, smalltalk


Likeness: 0.857142857143
sample_exams/cmps112-2016q4-final.tt
 9. Unification is part of the static type checking algorithm used by
    what language?
    (A) C++
    (B) Ocaml
    (C) Prolog
    (D) Smalltalk

Words from problem not in sneak peek:
part, unification, algorithm

Words from problem yes in sneak peek:
a, what, used, d, language, checking, of, is, c, ocaml, b, static, 9, the, type,
by, smalltalk, prolog


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-final.tt
 4. Which of the following C++ operators is ``lazy''?
    (A) *=
    (B) ==
    (C) >>
    (D) ? :

Words from problem not in sneak peek:
operators, lazy

Words from problem yes in sneak peek:
a, c, b, d, of, is, 4, which, following, the


Likeness: 0.833333333333
sample_exams/cmps112-2016q4-midterm.tt
3. Scheme.  Define the tail-recursive function foldl so that it may be
   used in the following example.  [2pt]
   > (define (sum list) (foldl + 0 list))
   > (sum '(1 2 3))
   6

Words from problem not in sneak peek:
may, recursive, foldl, example

Words from problem yes in sneak peek:
function, be, tail, 2pt, that, sum, 6, list, it, used, 1, 0, 3, 2, so, in,
following, the, scheme, define


Likeness: 0.847826086957
sample_exams/cmps112-2016q4-midterm.tt
7. Ocaml.  Define the function zipwith that takes a function and two
   lists and returns a new list with the elements combined.  Use
   failwith if the lists are not of the same length.  [2pt]
   val zipwith : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list
   # zipwith (+) [1;2;3;4] [5;6;7;8];;
   - : int list = [6; 8; 10; 12]
   # zipwith (+) [1;2;3;4] [5;6;7;8;9];;
   Exception: Failure "zipwith".
   # zipwith (fun a b -> a,b) [1;2;3] ['a';'b';'c'];;
   - : (int * char) list = [(1, 'a'); (2, 'b'); (3, 'c')]
   # zipwith max [1;2;3;4] [4;3;2;1];;
   - : int list = [4; 3; 3; 4]

Words from problem not in sneak peek:
exception, takes, zipwith, lists, char, failure, combined

Words from problem yes in sneak peek:
and, int, are, if, use, val, two, same, 1, returns, 2, 5, 4, 7, 6, 9, new,
define, function, elements, 2pt, that, max, 3, b, 8, not, with, a, 10, c, 12,
of, list, ocaml, length, fun, the, failwith


Likeness: 0.8
sample_exams/cmps112-2016q4-midterm.tt
 2. Static type inference is a major feature of:
    (A) C
    (B) Java
    (C) Ocaml
    (D) Scheme

Words from problem not in sneak peek:
major, inference, feature

Words from problem yes in sneak peek:
a, c, b, java, d, of, is, ocaml, 2, static, scheme, type


Likeness: 0.879310344828
sample_exams/cmps112-2016q4-midterm.tt
 6. In Smalltalk, the expression 3+4.  means:
    (A) The message + is sent to the number 3, the result of which is
        a function that accepts the message 4.
    (B) The message +4 is sent to the number 3.
    (C) The message 3+ is sent to the number 4.
    (D) The messages 3 and 4 are sent to the operator +.

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
means, messages, accepts, result, operator, expression, sent

Words from problem yes in sneak peek:
and, 12pt, is, number, indicates, are, want, in, message, total, your,
smalltalk, if, 1, 0, missing, question, negative, write, to, 3, 4, which, 6,
answer, you, worth, function, multiple, risk, that, max, answers, choice, wrong,
b, letter, a, c, 12, don, d, column, of, correct, points, t, each, the, z, left


Likeness: 0.882352941176
sample_exams/cmps112-2016q4-midterm.tt
 8. What is the signature of the Ocaml function List.hd (equivalent to
    car)?
    (A) 'a -> 'a list
    (B) 'a -> 'a
    (C) 'a list -> 'a list
    (D) 'a list -> 'a

Words from problem not in sneak peek:
equivalent, signature

Words from problem yes in sneak peek:
function, a, what, b, d, of, is, list, c, ocaml, to, car, 8, the, hd


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Words from problem not in sneak peek:
__________________________________________________, fold_left, _a

Words from problem yes in sneak peek:
a, blanks, 15, 2pt, val, int, length, sum, list, ocaml, 1, 3, 2, 5, 4, in, fun,
let, the, b, fill


Likeness: 0.888888888889
sample_exams/cmps112-2017q2-midterm.tt
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Words from problem not in sneak peek:
filter, takes, those, original

Words from problem yes in sneak peek:
and, int, is, as, in, for, with, returns, same, 1, 0, only, 2, 5, 4, which,
bool, define, function, predicate, elements, 2pt, 3, but, 8, true, a, list,
ocaml, fun, the, order


Likeness: 0.857142857143
sample_exams/cmps112-2017q2-midterm.tt
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Words from problem not in sneak peek:
opt, none, determined, 3pt, empty

Words from problem yes in sneak peek:
int, is, some, argument, ocaml, as, its, if, returns, 1, 3, bool, 4, which, 9,
5, type, define, function, 11, return, max, by, a, of, list, maximum, element,
fun, the


Likeness: 0.875
sample_exams/cmps112-2017q2-midterm.tt
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Words from problem not in sneak peek:
verses, re, recursive

Words from problem yes in sneak peek:
function, write, use, 12, 2pt, do, reverse, that, list, 3, order, 1, tail, 2, 5,
4, a, not, scheme, called, higher


Likeness: 0.885245901639
sample_exams/cmps112-2017q2-midterm.tt
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong an-
swer.  Wrong answers are worth negative points.  [12pt]

+--------------------------+------+------+------------+
|number of                 |      |× 1 = |      $= a$ |
|correct answers           |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× ½ = |      $= b$ |
|wrong answers             |      |      |            |
+--------------------------+------+------+------------+
|number of                 |      |× 0 = |  0         |
|missing answers           |      |      |            |
+--------------------------+------+------+------------+
|column total              |   12 |      |      $= c$ |
|$ c = max ( a - b , 0 ) $ |      |      |            |
+--------------------------+------+------+------------+

Words from problem not in sneak peek:
14, specifications, 3pt, per, project, add, mul

Words from problem yes in sneak peek:
int, 12pt, number, an, indicates, as, are, want, total, your, if, write, to,
that, question, negative, 1, 0, 3, 2, 5, 4, 7, 6, 9, you, swer, worth, define,
multiple, risk, missing, max, answers, choice, answer, wrong, b, letter, a, c,
12, don, column, of, list, ocaml, correct, points, t, each, the, z, left


Likeness: 0.807692307692
sample_exams/cmps112-2017q2-midterm.tt
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Words from problem not in sneak peek:
58, 1959, mainly, 1958, 1950s

Words from problem yes in sneak peek:
a, use, b, business, for, language, data, processing, c, lisp, fortran, 1957,
cobol, designed, which, in, 8, the, was, algol, d


Likeness: 0.894736842105
sample_exams/cmps112-2017q2-midterm.tt
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Words from problem not in sneak peek:
__, example

Words from problem yes in sneak peek:
and, 10, c, b, java, d, polymorphism, of, inclusion, conversion, an,
overloading, templates, a, generics, parametric, are


Likeness: 0.823529411765
sample_exams/cmps112-2017q2-midterm.tt
12. How will Ocaml respond to
    # (+);;
    (A) - : int * int * int = <fun>
    (B) - : int * int -> int = <fun>
    (C) - : int -> int * int = <fun>
    (D) - : int -> int -> int = <fun>

+--------------------------------------+
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
|jpgs/drag-and-drop.ps                 |
|                                      |
|                                      |
|                                      |
|                                      |
|                                      |
+--------------------------------------+


Words from problem not in sneak peek:
jpgs, drag, drop

Words from problem yes in sneak peek:
respond, a, c, 12, d, how, int, ocaml, and, will, to, b, fun, ps


