11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

Question 2. [3]

while (<>) {
   @nums = split m/ /;
   $total[$_] += $nums[$_] for 0..3;
}
print " @total\n";

________________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

Question 2. [3]

while (<>) {
   @nums = split m/ /;
   $total[$_] += $nums[$_] for 0..3;
}
print " @total\n";

________________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

Question 2. [3]

while (<>) {
   @nums = split m/ /;
   $total[$_] += $nums[$_] for 0..3;
}
print " @total\n";

________________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


11.    (D) Xerox PARC




Question 7. [5]

use strict;
use warnings;
$0 =~ s|.*/||;
my $status = 0;
my %hash;
for my $fname (@ARGV ? @ARGV : "-") {
   open my $file, "<$fname"
        or print STDERR "$0: $fname: $!\n" and $status = 1 and next;
   while (defined (my $line = <$file>)) {
      map {++$hash{$_}} $line =~ m/(\w+)/g;
      ##alternate: map {++$hash{$_}} split m/\W+/, $line;
   }
}
map {print "$_ $hash{$_}\n"} sort keys %hash;
exit $status;

_________________________________________________________________

Question 2. [3]

while (<>) {
   @nums = split m/ /;
   $total[$_] += $nums[$_] for 0..3;
}
print " @total\n";

________________________________________________________________________

 8.    (D) reference counting


 3.    (D) unreachable


