Question 5.

drop(_,[],[]).
drop(H,[H|T],[H|T]).
drop(H,[_|T],X):-drop(H,T,X).


Answers to test2, page 2.

________________________________________________________________________

Question 6.

let rec merge less list1 list2 = match list1, list2 with
    | [], list2 -> list2
    | list1, [] -> list1
    | (car1::cdr1 as list1), (car2::cdr2 as list2) ->
      if less car1 car2 then car1 :: merge less cdr2 list2
                        else car2 :: merge less list1 cdr2

________________________________________________________________________

Question 7.

let sum = List.fold_left (+) 0;;

________________________________________________________________________

Question 11.

let iota n =
    let rec iota' n list = 
        if n <= 0 then list else iota' (n - 1) (n :: list)
    in iota' n [];;

________________________________________________________________________

 2.    (A) closure


 4.    (C) when the class is loaded.


 5.    (B) heap


 9.    (B) referential transparency


 4.    (A) virtual function table


 6.    (A) find(X) :- guess(X), verify(X).


