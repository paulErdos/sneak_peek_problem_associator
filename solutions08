Question 10.

let reverse lis =
    let rec rev lis out = match lis with
        | [] -> out
        | h::t -> rev t (h::out)
    in rev lis [];;


Answers to test2, page 3.

________________________________________________________________________

Question 14.

product(1,[]).
product(N,[H|T]):-product(X,T),N is X * H.

________________________________________________________________________

Question 15.

(define (elim atom list)
    (cond ((null? list) list)
          ((eqv? atom (car list)) list)
          (else (elim atom (cdr list)))))


Answers to test2, page 4.


 1.    (C) monad


10.    (C) (cons (car a) (cdr a))


11.    (D) Thread


Answers to test2, page 4.


 1.    (C) ('a -> 'b -> 'c) -> 'b -> 'a -> 'c


 8.    (A) array


